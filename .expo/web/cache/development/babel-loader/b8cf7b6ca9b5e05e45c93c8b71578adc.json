{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport UserContext from \"./connection/userContext\";\nimport AuthNavigation from \"./navigation/AuthNavigation\";\nimport { getData, saveData } from \"./connection/AsyncStorage\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedin = _useState2[1];\n\n  useEffect(function () {\n    if (!loggedIn) {\n      getData().then(function (r) {\n        console.log(\"Storage to state - App.Js Effect\");\n        setLoggedin(r);\n      });\n    } else {\n      if (loggedIn.measurements && loggedIn.dp && loggedIn.bio) {\n        setLoggedin(function (previousState) {\n          return _objectSpread(_objectSpread({}, previousState), {}, {\n            profileStatus: true\n          });\n        });\n      }\n    }\n  }, []);\n  var value = {\n    loggedIn: loggedIn,\n    setLoggedin: setLoggedin\n  };\n  console.log(\"App.js Context Data\", loggedIn);\n  saveData(loggedIn).then(function () {\n    console.log(\"saved App.js context data\");\n  });\n\n  if (loggedIn) {\n    return React.createElement(UserContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n      barStyle: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }\n    }), React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Details\",\n      component: DetailsScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    })))));\n  } else {\n    return React.createElement(UserContext.Provider, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, React.createElement(UserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, function (_ref) {\n      var loggedIn = _ref.loggedIn,\n          setLoggedin = _ref.setLoggedin;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 55\n        }\n      }), React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, React.createElement(AuthNavigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      })));\n    }));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/App.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","BottomTabNavigator","UserContext","AuthNavigation","getData","saveData","DetailsScreen","Stack","App","undefined","loggedIn","setLoggedin","then","r","console","log","measurements","dp","bio","previousState","profileStatus","value","styles","container","Platform","OS","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Platform, StatusBar, StyleSheet, View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport UserContext from \"./connection/userContext\";\nimport AuthNavigation from \"./navigation/AuthNavigation\";\nimport {getData, saveData} from \"./connection/AsyncStorage\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n    const [loggedIn, setLoggedin] = useState(undefined);\n\n    useEffect(() => {\n        if (!loggedIn) {\n            getData().then(r => {\n                console.log(\"Storage to state - App.Js Effect\")\n                setLoggedin(r)\n            })\n        }else{\n            if (loggedIn.measurements && loggedIn.dp && loggedIn.bio){\n                setLoggedin(previousState => ({...previousState, profileStatus: true}));\n            }\n        }\n    },[])\n\n    const value = {loggedIn, setLoggedin};\n\n    console.log(\"App.js Context Data\", loggedIn)\n    saveData(loggedIn).then(()=>{console.log(\"saved App.js context data\")})\n\n\n    if (loggedIn) {\n        //This is the Main App Stack\n\n        return (\n            <UserContext.Provider value={value}>\n                <View style={styles.container}>\n                    {Platform.OS === 'ios' && <StatusBar barStyle=\"default\"/>}\n                    <NavigationContainer>\n                        <Stack.Navigator>\n                            <Stack.Screen name=\"Root\" component={BottomTabNavigator}/>\n                            <Stack.Screen name=\"Details\" component={DetailsScreen}/>\n                        </Stack.Navigator>\n                    </NavigationContainer>\n                </View>\n            </UserContext.Provider>\n        );\n    } else {\n        return (\n            //This is the Authentications screen stack.\n            <UserContext.Provider value={value}>\n                <UserContext.Consumer>\n                    {({loggedIn, setLoggedin}) => (\n                        <View style={styles.container}>\n                            {Platform.OS === 'ios' && <StatusBar barStyle=\"default\"/>}\n                            <NavigationContainer>\n                                <AuthNavigation/>\n                            </NavigationContainer>\n                        </View>\n                    )}\n                </UserContext.Consumer>\n            </UserContext.Provider>\n\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}