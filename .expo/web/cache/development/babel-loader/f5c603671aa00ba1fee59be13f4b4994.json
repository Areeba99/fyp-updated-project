{"ast":null,"code":"import firebase from \"firebase\";\nexport var MeasurementsHandler = {\n  addNew: function addNew(data, uid) {\n    return firebase.firestore().collection('users').doc(uid).collection(\"Measurements\").add(data).then(function (snapshot) {\n      return snapshot;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  getAll: function getAll(uid) {\n    return firebase.firestore().collection('users').doc(uid).collection(\"Measurements\").get().then(function (snapshot) {\n      var dataArray = [];\n      snapshot.docs.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        dataArray.push(data);\n      });\n      return dataArray;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  deleteMeasurement: function deleteMeasurement(docID, uid) {\n    return firebase.firestore().collection('users').doc(uid).collection(\"Measurements\").doc(docID).delete().then(function (snapshot) {\n      return snapshot;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/connection/MeasurementsHandler.js"],"names":["firebase","MeasurementsHandler","addNew","data","uid","firestore","collection","doc","add","then","snapshot","catch","err","console","log","getAll","get","dataArray","docs","forEach","id","push","deleteMeasurement","docID","delete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,GAAP,EAAe;AACnB,WAAOJ,QAAQ,CAACK,SAAT,GACFC,UADE,CACS,OADT,EAEFC,GAFE,CAEEH,GAFF,EAGFE,UAHE,CAGS,cAHT,EAIFE,GAJE,CAIEL,IAJF,EAKFM,IALE,CAKG,UAACC,QAAD,EAAc;AAChB,aAAOA,QAAP;AACH,KAPE,EAQFC,KARE,CAQI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KARP,CAAP;AASH,GAX8B;AAY/BG,EAAAA,MAAM,EAAE,gBAACX,GAAD,EAAS;AACb,WAAOJ,QAAQ,CAACK,SAAT,GACFC,UADE,CACS,OADT,EAEFC,GAFE,CAEEH,GAFF,EAGFE,UAHE,CAGS,cAHT,EAIFU,GAJE,GAKFP,IALE,CAKG,UAACC,QAAD,EAAc;AAChB,UAAIO,SAAS,GAAG,EAAhB;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,OAAd,CAAsB,UAAAZ,GAAG,EAAI;AACzB,YAAIJ,IAAI,GAAGI,GAAG,CAACJ,IAAJ,EAAX;AACAA,QAAAA,IAAI,CAACiB,EAAL,GAAUb,GAAG,CAACa,EAAd;AACAH,QAAAA,SAAS,CAACI,IAAV,CAAelB,IAAf;AACH,OAJD;AAKA,aAAOc,SAAP;AACH,KAbE,EAcFN,KAdE,CAcI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAdP,CAAP;AAeH,GA5B8B;AA6B/BU,EAAAA,iBAAiB,EAAE,2BAACC,KAAD,EAAQnB,GAAR,EAAgB;AAC/B,WAAOJ,QAAQ,CAACK,SAAT,GACFC,UADE,CACS,OADT,EAEFC,GAFE,CAEEH,GAFF,EAGFE,UAHE,CAGS,cAHT,EAIFC,GAJE,CAIEgB,KAJF,EAKFC,MALE,GAMFf,IANE,CAMG,UAACC,QAAD,EAAc;AAChB,aAAOA,QAAP;AACH,KARE,EASFC,KATE,CASI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KATP,CAAP;AAUH;AAxC8B,CAA5B","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport const MeasurementsHandler = {\r\n    addNew: (data, uid) => {\r\n        return firebase.firestore()\r\n            .collection('users')\r\n            .doc(uid)\r\n            .collection(\"Measurements\")\r\n            .add(data)\r\n            .then((snapshot) => {\r\n                return snapshot\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n    getAll: (uid) => {\r\n        return firebase.firestore()\r\n            .collection('users')\r\n            .doc(uid)\r\n            .collection(\"Measurements\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                let dataArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    let data = doc.data()\r\n                    data.id = doc.id;\r\n                    dataArray.push(data)\r\n                });\r\n                return dataArray\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n    deleteMeasurement: (docID, uid) => {\r\n        return firebase.firestore()\r\n            .collection('users')\r\n            .doc(uid)\r\n            .collection(\"Measurements\")\r\n            .doc(docID)\r\n            .delete()\r\n            .then((snapshot) => {\r\n                return snapshot\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n\r\n}"]},"metadata":{},"sourceType":"module"}