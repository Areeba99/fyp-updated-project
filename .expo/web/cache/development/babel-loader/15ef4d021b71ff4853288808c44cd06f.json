{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\ShowServiceDetails.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Avatar, Button, Image, ListItem, Text } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { SliderBox } from \"react-native-image-slider-box\";\nimport { Orders } from \"../../connection/OrderHandler\";\nexport default function ShowServiceDetails(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  console.log(route.params);\n\n  function createOrder(service, buyer) {\n    var order = {\n      buyer: buyer.uid,\n      buyerName: buyer.name,\n      title: service.title,\n      measurements: buyer.measurements,\n      seller: service.seller,\n      price: service.price,\n      start: Date.now(),\n      completed: false,\n      accepted: false,\n      service: service.id,\n      time: service.time,\n      ratings: 0\n    };\n\n    if (!buyer.measurements) {\n      Alert.alert(\"Measurements Not Added\", \"To please an order, you need to add measurements. Click Ok to add your measurements now.\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Order Cancelled\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"OK\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Measurements\");\n        }\n      }]);\n    }\n\n    Orders.newOrder(order).then(function (r) {\n      return navigation.navigate(\"BuyingOrders\", {\n        reload: true\n      });\n    });\n  }\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var _route$params$service, _route$params$service2, _route$params$service4, _route$params$service5, _route$params$service6, _route$params$service7, _route$params$service8;\n\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, React.createElement(SliderBox, {\n      images: (_route$params$service = route.params.service) == null ? void 0 : _route$params$service.cover,\n      sliderBoxHeight: 300,\n      dotStyle: {\n        marginBottom: 20\n      },\n      dotColor: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'rgba(255,255,255,1)',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        paddingHorizontal: 20,\n        marginTop: -20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: -25,\n        justifyContent: \"flex-end\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, loggedIn.uid === ((_route$params$service2 = route.params.service) == null ? void 0 : _route$params$service2.seller) ? React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-trash\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 47\n        }\n      }),\n      buttonStyle: {\n        backgroundColor: \"red\",\n        width: 50,\n        height: 50,\n        borderRadius: 50\n      },\n      onPress: function onPress() {\n        return Firebase.deleteThisService(route.params.service.id).then(function (r) {\n          if (r === true) {\n            navigation.navigate(\"Services\", {\n              reload: true\n            });\n          } else {\n            alert(r);\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }) : React.createElement(React.Fragment, null, React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-cart\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 54\n        }\n      }),\n      title: \" Purchase\",\n      buttonStyle: {\n        backgroundColor: \"#0085a2\",\n        width: 150,\n        height: 50,\n        borderRadius: 50,\n        marginRight: 10\n      },\n      onPress: function onPress() {\n        var _route$params$service3;\n\n        Alert.alert(\"Confirm Purchase\", \"Do you want to purchase this offer at Rs.\" + ((_route$params$service3 = route.params.service) == null ? void 0 : _route$params$service3.price) + \"?\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Order Cancelled\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return createOrder(route.params.service, loggedIn);\n          }\n        }]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }\n    }), React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-mail\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 51\n        }\n      }),\n      title: \" Chat\",\n      buttonStyle: {\n        backgroundColor: \"#a362fd\",\n        width: 100,\n        height: 50,\n        borderRadius: 50\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Messages\", {\n          screen: \"Chat\",\n          params: {\n            contact: route.params.service.seller,\n            title: \"Chat with SELLER\"\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }))), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        color: \"grey\",\n        fontStyle: \"italic\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Category: \" + ((_route$params$service4 = route.params.service) == null ? void 0 : _route$params$service4.category) + \", Est. Time: \" + ((_route$params$service5 = route.params.service) == null ? void 0 : _route$params$service5.time)), React.createElement(Text, {\n      style: {\n        fontSize: 24,\n        color: \"grey\",\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, (_route$params$service6 = route.params.service) == null ? void 0 : _route$params$service6.title), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        color: \"grey\",\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Starting at: PKR \" + ((_route$params$service7 = route.params.service) == null ? void 0 : _route$params$service7.price)), React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        color: \"grey\",\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, (_route$params$service8 = route.params.service) == null ? void 0 : _route$params$service8.details), React.createElement(Button, {\n      type: \"solid\",\n      title: \"Go Back\",\n      buttonStyle: {\n        borderColor: \"#797979\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ffffff\"\n      },\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }))));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/ShowServiceDetails.js"],"names":["React","useContext","useEffect","useState","Avatar","Button","Image","ListItem","Text","UserContext","Firebase","Ionicons","SliderBox","Orders","ShowServiceDetails","navigation","route","console","log","params","createOrder","service","buyer","order","uid","buyerName","name","title","measurements","seller","price","start","Date","now","completed","accepted","id","time","ratings","Alert","alert","text","onPress","style","navigate","newOrder","then","r","reload","loggedIn","setLoggedin","Platform","OS","styles","container","cover","marginBottom","flex","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","marginTop","justifyContent","display","flexDirection","width","height","borderRadius","deleteThisService","marginRight","screen","contact","contentContainer","fontSize","color","fontStyle","category","fontWeight","details","borderColor","goBack","marginHorizontal","StyleSheet","create","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput, Alert} from 'react-native';\r\nimport {Avatar, Button, Image, ListItem, Text} from \"react-native-elements\";\r\nimport UserContext from \"../../connection/userContext\";\r\nimport {Firebase} from \"../../connection/comms\";\r\nimport {Ionicons} from \"@expo/vector-icons\";\r\nimport {SliderBox} from \"react-native-image-slider-box\";\r\nimport {Orders} from \"../../connection/OrderHandler\";\r\n\r\n\r\nexport default function ShowServiceDetails({navigation, route}) {\r\n    console.log(route.params)\r\n\r\n    function createOrder(service, buyer){\r\n        let order = {\r\n            buyer: buyer.uid,\r\n            buyerName: buyer.name,\r\n            title: service.title,\r\n            measurements: buyer.measurements,\r\n            seller: service.seller,\r\n            price: service.price,\r\n            start: Date.now(),\r\n            completed: false,\r\n            accepted: false,\r\n            service: service.id,\r\n            time: service.time,\r\n            ratings: 0\r\n        }\r\n        if (!buyer.measurements){\r\n            Alert.alert(\"Measurements Not Added\", \"To please an order, you need to add measurements. Click Ok to add your measurements now.\",\r\n                [{text: \"Cancel\", onPress: () => console.log(\"Order Cancelled\"), style: \"cancel\"},\r\n                {text: \"OK\", onPress: () => navigation.navigate(\"Measurements\")}])\r\n        }\r\n        Orders.newOrder(order).then(r=>navigation.navigate(\"BuyingOrders\",{reload: true}))\r\n    }\r\n    return (\r\n        <UserContext.Consumer>\r\n            {({loggedIn, setLoggedin}) => (\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\r\n                                      style={styles.container} keyboardVerticalOffset={100}>\r\n\r\n                    <SliderBox images={route.params.service?.cover} sliderBoxHeight={300} dotStyle={{marginBottom: 20}}\r\n                               dotColor={\"red\"}/>\r\n                    <View style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(255,255,255,1)',\r\n                        borderTopLeftRadius: 20,\r\n                        borderTopRightRadius: 20,\r\n                        paddingHorizontal: 20,\r\n                        marginTop: -20,\r\n                    }}>\r\n                        <View style={{\r\n                            marginTop: -25,\r\n                            justifyContent: \"flex-end\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                        }}>\r\n                            {loggedIn.uid === route.params.service?.seller ?\r\n                                <Button icon={<Ionicons name={\"ios-trash\"} size={28} color={\"white\"}/>}\r\n                                        buttonStyle={{\r\n                                            backgroundColor: \"red\",\r\n                                            width: 50,\r\n                                            height: 50,\r\n                                            borderRadius: 50,\r\n                                        }}\r\n                                        onPress={() => (\r\n                                            Firebase.deleteThisService(route.params.service.id).then(r => {\r\n                                                if (r === true) {\r\n                                                    navigation.navigate(\"Services\", {reload: true})\r\n                                                } else {\r\n                                                    alert(r)\r\n                                                }\r\n                                            })\r\n                                        )}\r\n                                /> : <><Button icon={<Ionicons name={\"ios-cart\"} size={28} color={\"white\"}/>}\r\n                                               title={\" Purchase\"}\r\n                                               buttonStyle={{\r\n                                                   backgroundColor: \"#0085a2\",\r\n                                                   width: 150,\r\n                                                   height: 50,\r\n                                                   borderRadius: 50,\r\n                                                   marginRight: 10,\r\n                                               }}\r\n                                               onPress={() => {\r\n                                                   Alert.alert(\"Confirm Purchase\",\r\n                                                       \"Do you want to purchase this offer at Rs.\" + route.params.service?.price + \"?\",\r\n                                                       [{\r\n                                                           text: \"Cancel\",\r\n                                                           onPress: () => console.log(\"Order Cancelled\"),\r\n                                                           style: \"cancel\"\r\n                                                       },\r\n                                                           {text: \"OK\", onPress: () => createOrder(route.params.service, loggedIn)}\r\n                                                       ])\r\n                                               }}\r\n                                />\r\n\r\n                                    <Button icon={<Ionicons name={\"ios-mail\"} size={28} color={\"white\"}/>}\r\n                                            title={\" Chat\"}\r\n                                            buttonStyle={{\r\n                                                backgroundColor: \"#a362fd\",\r\n                                                width: 100,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                            }}\r\n                                            onPress={() => navigation.navigate(\"Messages\", {\r\n                                                screen: \"Chat\",\r\n                                                params: {\r\n                                                    contact: route.params.service.seller,\r\n                                                    title: \"Chat with SELLER\"\r\n                                                }\r\n                                            })}\r\n                                        // onPress={()=>navigation.navigate(\"Chat\",{contact: route.params.service.seller, title: \"Chat with SELLER\"})}\r\n                                    />\r\n                                </>}\r\n\r\n\r\n                        </View>\r\n                        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n\r\n                            <Text style={{\r\n                                fontSize: 14,\r\n                                color: \"grey\",\r\n                                fontStyle: \"italic\",\r\n                            }}>{\"Category: \" + route.params.service?.category + \", Est. Time: \" + route.params.service?.time}</Text>\r\n                            <Text style={{\r\n                                fontSize: 24,\r\n                                color: \"grey\",\r\n                                fontWeight: \"bold\",\r\n                            }}>{route.params.service?.title}</Text>\r\n\r\n                            <Text style={{\r\n                                fontSize: 14,\r\n                                color: \"grey\",\r\n                                marginTop: 10,\r\n                            }}>{\"Starting at: PKR \" + route.params.service?.price}</Text>\r\n                            <Text style={{\r\n                                fontSize: 18,\r\n                                color: \"grey\",\r\n                                marginTop: 20,\r\n                            }}>{route.params.service?.details}</Text>\r\n\r\n                            <Button\r\n                                type={\"solid\"}\r\n                                title={\"Go Back\"}\r\n                                buttonStyle={{borderColor: \"#797979\", borderRadius: 20}}\r\n                                titleStyle={{color: \"#ffffff\"}}\r\n                                onPress={() => {\r\n                                    navigation.goBack()\r\n\r\n                                }}\r\n                                style={{marginTop: 20, marginHorizontal: 20}}\r\n                            />\r\n\r\n\r\n                        </ScrollView>\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n\r\n            )}\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n\r\n    contentContainer: {\r\n        paddingTop: 30,\r\n        paddingBottom: 20\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}