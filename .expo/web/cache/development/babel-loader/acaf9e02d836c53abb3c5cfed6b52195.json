{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport UserContext from \"./connection/userContext\";\nimport AuthNavigation from \"./navigation/AuthNavigation\";\nimport { getData, saveData } from \"./connection/AsyncStorage\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport firebase from \"firebase\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nvar askPermissions = function askPermissions() {\n  var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n  return _regeneratorRuntime.async(function askPermissions$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n        case 2:\n          _await$Permissions$ge = _context2.sent;\n          existingStatus = _await$Permissions$ge.status;\n          finalStatus = existingStatus;\n\n          if (!(existingStatus !== \"granted\")) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n        case 8:\n          _await$Permissions$as = _context2.sent;\n          status = _await$Permissions$as.status;\n          finalStatus = status;\n\n        case 11:\n          return _context2.abrupt(\"return\", finalStatus === \"granted\");\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar App = function App() {\n  LogBox.ignoreAllLogs();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedin = _useState2[1];\n\n  var value = {\n    loggedIn: loggedIn,\n    setLoggedin: setLoggedin\n  };\n  useEffect(function () {\n    askPermissions().then(function (r) {\n      return console.log(\"Notification Permission => \", r);\n    });\n\n    if (!loggedIn) {\n      getData().then(function (r) {\n        setLoggedin(r);\n      });\n    } else {}\n  });\n  saveData(loggedIn).then(function () {\n    console.log(\"saved App.js context data\");\n  });\n\n  if (loggedIn) {\n    return React.createElement(UserContext.Provider, {\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n      barStyle: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 47\n      }\n    }), React.createElement(NavigationContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, React.createElement(BottomTabNavigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }))));\n  } else {\n    return React.createElement(UserContext.Provider, {\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(UserContext.Consumer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, function (_ref) {\n      var loggedIn = _ref.loggedIn,\n          setLoggedin = _ref.setLoggedin;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 55\n        }\n      }), React.createElement(NavigationContainer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, React.createElement(AuthNavigation, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      })));\n    }));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/App.js"],"names":["React","useEffect","useRef","useState","NavigationContainer","createStackNavigator","BottomTabNavigator","UserContext","AuthNavigation","getData","saveData","LogBox","firebase","Notifications","Permissions","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","askPermissions","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","App","ignoreAllLogs","undefined","loggedIn","setLoggedin","value","then","r","console","log","styles","container","Platform","OS","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {Platform, StatusBar, StyleSheet, View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport UserContext from \"./connection/userContext\";\nimport AuthNavigation from \"./navigation/AuthNavigation\";\nimport {getData, saveData} from \"./connection/AsyncStorage\";\nimport {LogBox} from 'react-native';\nimport firebase from \"firebase\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\n\nNotifications.setNotificationHandler({\n    handleNotification: async () => {\n        return {\n            shouldShowAlert: true,\n            shouldPlaySound: true,\n            shouldSetBadge: true,\n        };\n    },\n});\nlet askPermissions = async () => {\n    const {status: existingStatus} = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n        const {status} = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n        finalStatus = status;\n    }\n    return finalStatus === \"granted\";\n\n};\n\n\nconst App = () => {\n    LogBox.ignoreAllLogs();\n    const [loggedIn, setLoggedin] = useState(undefined);\n    const value = {loggedIn, setLoggedin};\n\n    useEffect(() => {\n        askPermissions().then(r => console.log(\"Notification Permission => \", r))\n        if (!loggedIn) {\n            getData().then(r => {\n                setLoggedin(r)\n            })\n        } else {\n\n        }\n    })\n\n    saveData(loggedIn).then(() => {\n        console.log(\"saved App.js context data\")\n    })\n\n    if (loggedIn) {\n        return (\n            <UserContext.Provider value={value}>\n                <View style={styles.container}>\n                    {Platform.OS === 'ios' && <StatusBar barStyle=\"default\"/>}\n                    <NavigationContainer>\n                        <BottomTabNavigator/>\n                    </NavigationContainer>\n                </View>\n            </UserContext.Provider>\n        );\n    } else {\n        return (\n            <UserContext.Provider value={value}>\n                <UserContext.Consumer>\n                    {({loggedIn, setLoggedin}) => (\n                        <View style={styles.container}>\n                            {Platform.OS === 'ios' && <StatusBar barStyle=\"default\"/>}\n                            <NavigationContainer>\n                                <AuthNavigation/>\n                            </NavigationContainer>\n                        </View>\n                    )}\n                </UserContext.Consumer>\n            </UserContext.Provider>\n\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}