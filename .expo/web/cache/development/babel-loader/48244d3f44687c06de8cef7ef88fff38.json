{"ast":null,"code":"import firebase from \"firebase\";\nexport var Orders = {\n  newOrder: function newOrder(data) {\n    return firebase.firestore().collection('Orders').add(data).then(function (r) {\n      return r;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  getBuyingOrders: function getBuyingOrders(uid) {\n    return firebase.firestore().collection(\"Orders\").where(\"buyer\", \"==\", uid).get().then(function (snapshot) {\n      var dataArray = [];\n      snapshot.docs.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        dataArray.push(data);\n      });\n      return dataArray;\n    });\n  },\n  getSellingOrders: function getSellingOrders(uid) {\n    return firebase.firestore().collection(\"Orders\").where(\"seller\", \"==\", uid).get().then(function (snapshot) {\n      var dataArray = [];\n      snapshot.docs.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        dataArray.push(data);\n      });\n      return dataArray;\n    });\n  },\n  deleteOrder: function deleteOrder(orderID) {\n    return firebase.firestore().collection(\"Orders\").doc(orderID).delete().then(function () {\n      return true;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  acceptOrder: function acceptOrder(orderID) {\n    return firebase.firestore().collection(\"Orders\").doc(orderID).update({\n      \"accepted\": true\n    }).then(function () {\n      return true;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/connection/OrderHandler.js"],"names":["firebase","Orders","newOrder","data","firestore","collection","add","then","r","catch","err","console","log","getBuyingOrders","uid","where","get","snapshot","dataArray","docs","forEach","doc","id","push","getSellingOrders","deleteOrder","orderID","delete","acceptOrder","update"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,MAAM,GAAG;AAClBC,EAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAU;AAChB,WAAOH,QAAQ,CAACI,SAAT,GACFC,UADE,CACS,QADT,EAEFC,GAFE,CAEEH,IAFF,EAGFI,IAHE,CAGG,UAACC,CAAD,EAAO;AACT,aAAOA,CAAP;AACH,KALE,EAMFC,KANE,CAMI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KANP,CAAP;AAOH,GATiB;AAUlBG,EAAAA,eAAe,EAAE,yBAACC,GAAD,EAAS;AACtB,WAAOd,QAAQ,CACVI,SADE,GAEFC,UAFE,CAES,QAFT,EAGFU,KAHE,CAGI,OAHJ,EAGa,IAHb,EAGmBD,GAHnB,EAIFE,GAJE,GAKFT,IALE,CAKG,UAACU,QAAD,EAAc;AAChB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB,YAAIlB,IAAI,GAAGkB,GAAG,CAAClB,IAAJ,EAAX;AACAA,QAAAA,IAAI,CAACmB,EAAL,GAAUD,GAAG,CAACC,EAAd;AACAJ,QAAAA,SAAS,CAACK,IAAV,CAAepB,IAAf;AACH,OAJD;AAKA,aAAOe,SAAP;AACH,KAbE,CAAP;AAcH,GAzBiB;AA0BlBM,EAAAA,gBAAgB,EAAE,0BAACV,GAAD,EAAS;AACvB,WAAOd,QAAQ,CACVI,SADE,GAEFC,UAFE,CAES,QAFT,EAGFU,KAHE,CAGI,QAHJ,EAGc,IAHd,EAGoBD,GAHpB,EAIFE,GAJE,GAKFT,IALE,CAKG,UAACU,QAAD,EAAc;AAChB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB,YAAIlB,IAAI,GAAGkB,GAAG,CAAClB,IAAJ,EAAX;AACAA,QAAAA,IAAI,CAACmB,EAAL,GAAUD,GAAG,CAACC,EAAd;AACAJ,QAAAA,SAAS,CAACK,IAAV,CAAepB,IAAf;AACH,OAJD;AAKA,aAAOe,SAAP;AACH,KAbE,CAAP;AAcH,GAzCiB;AA0ClBO,EAAAA,WAAW,EAAE,qBAACC,OAAD,EAAa;AACtB,WAAO1B,QAAQ,CACVI,SADE,GAEFC,UAFE,CAES,QAFT,EAGFgB,GAHE,CAGEK,OAHF,EAIFC,MAJE,GAKFpB,IALE,CAKG,YAAM;AACR,aAAO,IAAP;AACH,KAPE,EAQFE,KARE,CAQI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KARP,CAAP;AASH,GApDiB;AAqDlBkB,EAAAA,WAAW,EAAE,qBAACF,OAAD,EAAa;AACtB,WAAO1B,QAAQ,CACVI,SADE,GAEFC,UAFE,CAES,QAFT,EAGFgB,GAHE,CAGEK,OAHF,EAIFG,MAJE,CAIK;AAAC,kBAAY;AAAb,KAJL,EAKFtB,IALE,CAKG,YAAM;AACR,aAAO,IAAP;AACH,KAPE,EAQFE,KARE,CAQI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KARP,CAAP;AASH;AA/DiB,CAAf","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport const Orders = {\r\n    newOrder: (data) => {\r\n        return firebase.firestore()\r\n            .collection('Orders')\r\n            .add(data)\r\n            .then((r) => {\r\n                return r\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n    getBuyingOrders: (uid) => {\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"Orders\")\r\n            .where(\"buyer\", \"==\", uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let dataArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    let data = doc.data()\r\n                    data.id = doc.id\r\n                    dataArray.push(data)\r\n                });\r\n                return dataArray\r\n            });\r\n    },\r\n    getSellingOrders: (uid) => {\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"Orders\")\r\n            .where(\"seller\", \"==\", uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let dataArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    let data = doc.data()\r\n                    data.id = doc.id\r\n                    dataArray.push(data)\r\n                });\r\n                return dataArray\r\n            });\r\n    },\r\n    deleteOrder: (orderID) => {\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"Orders\")\r\n            .doc(orderID)\r\n            .delete()\r\n            .then(() => {\r\n                return true\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n    acceptOrder: (orderID) => {\r\n        return firebase\r\n            .firestore()\r\n            .collection(\"Orders\")\r\n            .doc(orderID)\r\n            .update({\"accepted\": true})\r\n            .then(() => {\r\n                return true\r\n            })\r\n            .catch(err => console.log(err));\r\n    },\r\n}"]},"metadata":{},"sourceType":"module"}