{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\BuyingOrdersList.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { deleteUserData, getData, saveData } from \"../../connection/AsyncStorage\";\nimport { Firebase } from \"../../connection/comms\";\nimport { Orders } from \"../../connection/OrderHandler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport default function BuyingOrderList(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setOrders = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var loadDataInView = function loadDataInView() {\n    Orders.getBuyingOrders(loggedIn.uid).then(function (r) {\n      setOrders(r);\n      setLoading(false);\n      setRefreshing(false);\n    });\n  };\n\n  useEffect(function () {\n    var _route$params;\n\n    if ((_route$params = route.params) != null && _route$params.reload) {\n      loadDataInView();\n    }\n\n    console.log(\"Effect Seller Services\");\n\n    if (Loading === true) {\n      loadDataInView();\n    }\n  }, [navigation, route]);\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    setLoading(true);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 49\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, orders && orders.map(function (o, k) {\n      return React.createElement(ListItem, {\n        key: k,\n        title: \"Order ID: \" + o.id,\n        bottomDivider: true,\n        subtitle: \"Price: Rs.\" + o.price,\n        chevron: true,\n        subtitleStyle: {\n          color: \"grey\"\n        },\n        leftIcon: o.accepted ? React.createElement(Ionicons, {\n          name: \"md-checkmark\",\n          size: 28,\n          color: \"green\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 60\n          }\n        }) : React.createElement(Ionicons, {\n          name: \"md-hourglass\",\n          size: 28,\n          color: \"orange\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 120\n          }\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(\"BuyingOrdersDetails\", {\n            order: o\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      });\n    }), React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        color: \"grey\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"No More Orders to display.\")));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/BuyingOrdersList.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","deleteUserData","getData","saveData","Firebase","Orders","Ionicons","BuyingOrderList","navigation","route","loggedIn","orders","setOrders","Loading","setLoading","refreshing","setRefreshing","loadDataInView","getBuyingOrders","uid","then","r","params","reload","console","log","onRefresh","setLoggedin","Platform","OS","styles","container","contentContainer","map","o","k","id","price","color","accepted","navigate","order","textAlign","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput, RefreshControl,} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\r\nimport UserContext from \"../../connection/userContext\";\r\nimport {deleteUserData, getData, saveData} from \"../../connection/AsyncStorage\";\r\nimport {Firebase} from \"../../connection/comms\";\r\nimport {Orders} from \"../../connection/OrderHandler\";\r\nimport {Ionicons} from \"@expo/vector-icons\";\r\n// import firebase from \"firebase\";\r\n\r\n\r\nexport default function BuyingOrderList({navigation, route}) {\r\n    const {loggedIn} = useContext(UserContext)\r\n    const [orders, setOrders] = useState(null)\r\n    const [Loading, setLoading] = useState(true)\r\n    const [refreshing, setRefreshing] = useState(false);\r\n\r\n\r\n    const loadDataInView = () => {\r\n        Orders.getBuyingOrders(loggedIn.uid).then(r => {\r\n            setOrders(r)\r\n            setLoading(false)\r\n            setRefreshing(false)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (route.params?.reload){\r\n            loadDataInView()\r\n        }\r\n\r\n        console.log(\"Effect Seller Services\")\r\n        if (Loading === true) {\r\n            loadDataInView()\r\n        }\r\n\r\n    },[navigation, route])\r\n\r\n    const onRefresh = () => {\r\n        setRefreshing(true)\r\n        setLoading(true)\r\n\r\n    }\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n            {({loggedIn, setLoggedin}) => (\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\r\n                                      style={styles.container} keyboardVerticalOffset={100}>\r\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}\r\n                                refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}>\r\n                        {orders && orders.map((o, k) => (\r\n                            <ListItem key={k} title={\"Order ID: \"+o.id}\r\n                                      bottomDivider\r\n                                      subtitle={\"Price: Rs.\"+o.price}\r\n                                      chevron={true}\r\n                                      subtitleStyle={{color: \"grey\"}}\r\n                                      leftIcon={o.accepted?<Ionicons name={\"md-checkmark\"} size={28} color={\"green\"}/>:<Ionicons name={\"md-hourglass\"} size={28} color={\"orange\"}/>}\r\n                                      onPress={()=>navigation.navigate(\"BuyingOrdersDetails\", {order: o})}\r\n\r\n                            />))}\r\n                            <Text style={{textAlign: \"center\", color: \"grey\",}}>No More Orders to display.</Text>\r\n\r\n                    </ScrollView>\r\n                </KeyboardAvoidingView>\r\n\r\n            )}\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1 ,\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    contentContainer: {\r\n        paddingTop: 30,\r\n        paddingBottom: 20\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}