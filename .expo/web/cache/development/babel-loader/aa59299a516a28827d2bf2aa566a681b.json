{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\SellerServices.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { deleteUserData, getData, saveData } from \"../../connection/AsyncStorage\";\nimport { Firebase } from \"../../connection/comms\";\nexport default function SellerServices(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      services = _useState2[0],\n      setServices = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var loadDataInView = function loadDataInView() {\n    Firebase.getMyServices(loggedIn.uid).then(function (r) {\n      setServices(r);\n      setLoading(false);\n      setRefreshing(false);\n    });\n  };\n\n  useEffect(function () {\n    var _route$params;\n\n    if ((_route$params = route.params) != null && _route$params.reload) {\n      loadDataInView();\n    }\n\n    console.log(\"Effect Seller Services\");\n\n    if (Loading === true) {\n      loadDataInView();\n    }\n  }, [navigation, route]);\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    setLoading(true);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, route.name), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: \"normal\",\n        paddingHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Advertise your service here.\"), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, services && services.map(function (s, k) {\n      return React.createElement(ListItem, {\n        key: k,\n        title: s.title,\n        subtitle: s.details,\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            service: s\n          });\n        },\n        leftAvatar: {\n          source: {\n            uri: s.cover[0]\n          },\n          rounded: false\n        },\n        chevron: true,\n        subtitleStyle: {\n          color: \"grey\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      });\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Add New Service\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"NewService\");\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"solid\",\n      title: \"Back to Profile\",\n      buttonStyle: {\n        borderColor: \"#797979\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ffffff\"\n      },\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/SellerServices.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","deleteUserData","getData","saveData","Firebase","SellerServices","navigation","route","loggedIn","services","setServices","Loading","setLoading","refreshing","setRefreshing","loadDataInView","getMyServices","uid","then","r","params","reload","console","log","onRefresh","setLoggedin","Platform","OS","styles","container","fontSize","fontWeight","paddingHorizontal","marginTop","name","contentContainer","map","s","k","title","details","navigate","service","source","uri","cover","rounded","color","borderColor","borderRadius","marginHorizontal","goBack","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput, RefreshControl,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {deleteUserData, getData, saveData} from \"../../connection/AsyncStorage\";\nimport {Firebase} from \"../../connection/comms\";\n// import firebase from \"firebase\";\n\n\nexport default function SellerServices({navigation, route}) {\n    const {loggedIn} = useContext(UserContext)\n    const [services, setServices] = useState(null)\n    const [Loading, setLoading] = useState(true)\n    const [refreshing, setRefreshing] = useState(false);\n\n\n    const loadDataInView = () => {\n        Firebase.getMyServices(loggedIn.uid).then(r => {\n            setServices(r)\n            setLoading(false)\n            setRefreshing(false)\n        })\n    }\n\n    useEffect(() => {\n        if (route.params?.reload){\n            loadDataInView()\n        }\n\n        console.log(\"Effect Seller Services\")\n        if (Loading === true) {\n            loadDataInView()\n        }\n\n    },[navigation, route])\n\n    const onRefresh = () => {\n        setRefreshing(true)\n        setLoading(true)\n\n    }\n\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <Text style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginTop: 10\n                    }}>{route.name}</Text>\n                    <Text style={{fontSize: 14, fontWeight: \"normal\", paddingHorizontal: 20}}>Advertise your service\n                        here.</Text>\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}\n                                refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}>\n\n\n                        {services && services.map((s, k) => (\n                            <ListItem key={k} title={s.title}\n                                      subtitle={s.details}\n                                      onPress={()=>navigation.navigate(\"Details\", {service: s})}\n                                      leftAvatar={{\n                                          source: {uri: s.cover[0]},\n                                          rounded: false,\n                                      }}\n                                      chevron={true}\n                                      subtitleStyle={{color: \"grey\"}}\n                            />))}\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Add New Service\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={() => navigation.navigate(\"NewService\")}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n                        <Button\n                            type={\"solid\"}\n                            title={\"Back to Profile\"}\n                            buttonStyle={{borderColor: \"#797979\", borderRadius: 20}}\n                            titleStyle={{color: \"#ffffff\"}}\n                            onPress={() => {\n                                navigation.goBack()\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n\n    contentContainer: {\n        paddingTop: 30,\n        paddingBottom: 20\n    },\n\n});"]},"metadata":{},"sourceType":"module"}