{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\auth\\\\StationScreen.js\";\nimport React, { useState } from \"react\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, SearchBar } from \"react-native-elements\";\nimport { searchStations } from \"../../constants/stations\";\nexport default function SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stations = _useState6[0],\n      setStations = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refreshing = _useState8[0],\n      setRefreshing = _useState8[1];\n\n  var updateSearch = function updateSearch(search) {\n    setSearch(search);\n  };\n\n  var loadDataInView = function loadDataInView() {\n    if (search !== \"\") {\n      var stationCodes = searchStations(search);\n      setStations(stationCodes);\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  var onRefresh = function onRefresh() {\n    loadDataInView();\n    setRefreshing(true);\n    setLoading(true);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    platform: \"ios\",\n    cancelButtonTitle: \"Cancel\",\n    placeholder: \"Search trains by stations\",\n    value: search,\n    onChangeText: updateSearch,\n    onSubmitEditing: loadDataInView,\n    containerStyle: {\n      paddingVertical: 50,\n      backgroundColor: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, stations && stations.map(function (station, key) {\n    var name = Object.keys(station)[0];\n    var code = station[name];\n    return React.createElement(ListItem, {\n      leftElement: React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, \"\\uD83D\\uDE82\")),\n      key: key,\n      title: name,\n      titleStyle: {\n        fontWeight: \"bold\"\n      },\n      subtitle: code,\n      onPress: function onPress() {\n        navigation.navigate(\"Register\", {\n          stationCode: code\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    });\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  searchHeader: {}\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/auth/StationScreen.js"],"names":["React","useState","ListItem","SearchBar","searchStations","SearchScreen","navigation","search","setSearch","Loading","setLoading","undefined","stations","setStations","refreshing","setRefreshing","updateSearch","loadDataInView","stationCodes","onRefresh","styles","container","paddingVertical","backgroundColor","map","station","key","name","Object","keys","code","fontSize","fontWeight","navigate","stationCode","StyleSheet","create","flex","searchHeader"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {RefreshControl, SafeAreaView, ScrollView, StyleSheet, Text, View} from 'react-native'\nimport {ListItem, SearchBar} from \"react-native-elements\";\nimport {searchStations} from \"../../constants/stations\";\n\n\nexport default function SearchScreen({navigation}) {\n    const [search, setSearch] = useState(\"\");\n    const [Loading, setLoading] = useState(true)\n    const [stations, setStations] = useState(undefined)\n    const [refreshing, setRefreshing] = useState(false);\n\n    let updateSearch = search => {\n        setSearch(search);\n    }\n\n    const loadDataInView = () => {\n        if (search !== \"\") {\n            const stationCodes = searchStations(search)\n            setStations(stationCodes)\n            setLoading(false)\n            setRefreshing(false)\n        }\n    }\n\n\n    const onRefresh = () => {\n        loadDataInView()\n        setRefreshing(true)\n        setLoading(true)\n\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <SearchBar\n                platform=\"ios\"\n                cancelButtonTitle=\"Cancel\"\n                placeholder='Search trains by stations'\n                value={search}\n                onChangeText={updateSearch}\n                onSubmitEditing={loadDataInView}\n                containerStyle={{paddingVertical: 50, backgroundColor: \"#fff\"}}\n            />\n            <ScrollView style={styles.container}\n                        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}\n            >\n                {stations && stations.map((station, key) => {\n\n                    const name = Object.keys(station)[0]\n                    const code = station[name]\n                    return (\n                        <ListItem\n                            leftElement={\n                                <View>\n                                    <Text style={{fontSize: 30}}>\n                                        ðŸš‚\n                                    </Text>\n                                </View>\n                            }\n                            key={key}\n                            title={name}\n                            titleStyle={{fontWeight: \"bold\"}}\n                            subtitle={code}\n                            onPress={()=>{\n                                navigation.navigate(\"Register\", {\n                                    stationCode: code\n                                });\n                            }}\n                        />\n                    )\n\n                })}\n            </ScrollView>\n        </SafeAreaView>\n    )\n\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    searchHeader: {}\n});\n"]},"metadata":{},"sourceType":"module"}