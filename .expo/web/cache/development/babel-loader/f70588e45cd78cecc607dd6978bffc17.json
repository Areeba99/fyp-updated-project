{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\AddNewService.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport { saveData } from \"../../connection/AsyncStorage\";\nexport default function AddNewService(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      service = _useState2[0],\n      setService = _useState2[1];\n\n  var _useState3 = useState(new Array(5)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      covers = _useState4[0],\n      setCovers = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    console.log(covers);\n  }, []);\n  console.log(service);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              Firebase.serviceIMG(result.uri).then(function (link) {\n                console.log(\"link, >>\", link);\n                setService(function (previousState) {\n                  return _objectSpread(_objectSpread({}, previousState), {}, {\n                    cover: link\n                  });\n                });\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, route.name), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        marginBottom: 20,\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, React.createElement(Avatar, {\n      source: {\n        uri: service == null ? void 0 : service.cover\n      },\n      size: \"medium\",\n      containerStyle: {\n        marginHorizontal: 10\n      },\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: service == null ? void 0 : service.cover\n      },\n      size: \"medium\",\n      containerStyle: {\n        marginHorizontal: 10\n      },\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: service == null ? void 0 : service.cover\n      },\n      size: \"medium\",\n      containerStyle: {\n        marginHorizontal: 10\n      },\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: service == null ? void 0 : service.cover\n      },\n      size: \"medium\",\n      containerStyle: {\n        marginHorizontal: 10\n      },\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: service == null ? void 0 : service.cover\n      },\n      size: \"medium\",\n      containerStyle: {\n        marginHorizontal: 10\n      },\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"I will...\",\n      input: {\n        placeholder: 'do the task',\n        defaultValue: service.title,\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              title: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Starting at only, Rs: \",\n      input: {\n        placeholder: 'Rs: 5000',\n        defaultValue: service.price,\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              price: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      bottomDivider: true,\n      title: \"Here are the details\",\n      input: {\n        multiline: true,\n        placeholder: 'Rs: 5000',\n        defaultValue: service.details,\n        style: {\n          height: \"100%\"\n        },\n        containerStyle: {\n          height: 100\n        },\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              details: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Add Service\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        Firebase.addNewService(service, loggedIn.uid).then(function (r) {\n          if (r) {\n            navigation.navigate(\"Services\", {\n              reload: true\n            });\n          }\n        });\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"solid\",\n      title: \"Back to Profile\",\n      buttonStyle: {\n        borderColor: \"#797979\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ffffff\"\n      },\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/AddNewService.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","Firebase","saveData","AddNewService","navigation","route","loggedIn","service","setService","Array","covers","setCovers","Platform","OS","requestCameraRollPermissionsAsync","status","alert","console","log","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","serviceIMG","uri","then","link","previousState","cover","setLoggedin","styles","container","fontSize","fontWeight","paddingHorizontal","marginTop","name","contentContainer","marginBottom","display","justifyContent","flexDirection","flexWrap","marginHorizontal","charAt","toUpperCase","placeholder","defaultValue","title","onChangeText","text","price","multiline","details","style","height","containerStyle","borderColor","borderRadius","color","addNewService","uid","r","navigate","reload","goBack","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {Firebase} from \"../../connection/comms\";\nimport {saveData} from \"../../connection/AsyncStorage\";\n\n\nexport default function AddNewService({navigation, route}) {\n    const {loggedIn} = useContext(UserContext)\n    const [service, setService] = useState({})\n    const [covers, setCovers] = useState(new Array(5))\n\n    useEffect(() => {\n            //Image Permissions\n            (async () => {\n                if (Platform.OS !== 'web') {\n                    const {status} = await ImagePicker.requestCameraRollPermissionsAsync();\n                    if (status !== 'granted') {\n                        alert('Sorry, we need camera roll permissions to make this work!');\n                    }\n                }\n            })();\n            console.log(covers)\n\n    }, [])\n    console.log(service)\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 0.5,\n        });\n\n        console.log(result);\n\n        if (!result.cancelled) {\n            Firebase.serviceIMG(result.uri)\n                .then(link => {\n                    console.log(\"link, >>\", link)\n                    setService(previousState => ({...previousState, cover: link}));\n                    \n                })\n\n        }\n    };\n\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <Text style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginTop: 10\n                    }}>{route.name}</Text>\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        <View style={{marginBottom: 20, display: \"flex\", justifyContent: \"center\", flexDirection: \"row\", flexWrap: \"wrap\"}}>\n                            <Avatar source={{uri: service?.cover}} size={\"medium\"} containerStyle={{marginHorizontal: 10,}}\n                                    title={loggedIn.name.charAt(0).toUpperCase()} showEditButton={true}\n                                    onEditPress={() => pickImage()}/>\n                            <Avatar source={{uri: service?.cover}} size={\"medium\"} containerStyle={{marginHorizontal: 10,}}\n                                    title={loggedIn.name.charAt(0).toUpperCase()} showEditButton={true}\n                                    onEditPress={() => pickImage()}/>\n                            <Avatar source={{uri: service?.cover}} size={\"medium\"} containerStyle={{marginHorizontal: 10,}}\n                                    title={loggedIn.name.charAt(0).toUpperCase()} showEditButton={true}\n                                    onEditPress={() => pickImage()}/>\n                            <Avatar source={{uri: service?.cover}} size={\"medium\"} containerStyle={{marginHorizontal: 10,}}\n                                    title={loggedIn.name.charAt(0).toUpperCase()} showEditButton={true}\n                                    onEditPress={() => pickImage()}/>\n                            <Avatar source={{uri: service?.cover}} size={\"medium\"} containerStyle={{marginHorizontal: 10,}}\n                                    title={loggedIn.name.charAt(0).toUpperCase()} showEditButton={true}\n                                    onEditPress={() => pickImage()}/>\n                        </View>\n                        <ListItem\n                            topDivider\n                            title=\"I will...\"\n                            input={{\n                                placeholder: 'do the task',\n                                defaultValue: service.title,\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, title:text}));\n                                }\n                            }}\n                        />\n\n                        <ListItem\n                            topDivider\n                            title=\"Starting at only, Rs: \"\n                            input={{\n                                placeholder: 'Rs: 5000',\n                                defaultValue: service.price,\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, price: text}));\n                                }\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            bottomDivider\n                            title=\"Here are the details\"\n                            input={{\n                                multiline: true,\n                                placeholder: 'Rs: 5000',\n                                defaultValue: service.details,\n                                style: {height: \"100%\"},\n                                containerStyle: {height: 100},\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, details: text}));\n                                }\n                            }}\n                        />\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Add Service\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={function () {\n                                Firebase.addNewService(service, loggedIn.uid).then(r => {\n                                    if (r){\n                                        navigation.navigate(\"Services\", {reload: true})\n                                    }\n                                })\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n                        <Button\n                            type={\"solid\"}\n                            title={\"Back to Profile\"}\n                            buttonStyle={{borderColor: \"#797979\", borderRadius: 20}}\n                            titleStyle={{color: \"#ffffff\"}}\n                            onPress={() => {\n                                navigation.goBack()\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n\n    contentContainer: {\n        paddingTop: 30,\n        paddingBottom: 20\n    },\n\n});"]},"metadata":{},"sourceType":"module"}