{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\AddNewService.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport { saveData } from \"../../connection/AsyncStorage\";\nimport { Picker } from '@react-native-picker/picker';\nexport default function AddNewService(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      service = _useState2[0],\n      setService = _useState2[1];\n\n  var _useState3 = useState(new Array(5).fill(\"\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      covers = _useState4[0],\n      setCovers = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  console.log(service);\n\n  var pickImage = function pickImage(index) {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              Firebase.serviceIMG(result.uri).then(function (link) {\n                console.log(\"link, >>\", link);\n                covers[index] = link;\n                setCovers(covers);\n                setService(function (previousState) {\n                  return _objectSpread(_objectSpread({}, previousState), {}, {\n                    cover: covers\n                  });\n                });\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, route.name), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        marginBottom: 20,\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, covers.map(function (cover, key) {\n      return React.createElement(Avatar, {\n        source: {\n          uri: covers[key]\n        },\n        size: \"medium\",\n        containerStyle: {\n          marginHorizontal: 10\n        },\n        title: key + 1,\n        showEditButton: true,\n        onEditPress: function onEditPress() {\n          return pickImage(key);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      });\n    })), React.createElement(Picker, {\n      selectedValue: service.category,\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        setService(function (previousState) {\n          return _objectSpread(_objectSpread({}, previousState), {}, {\n            category: itemValue\n          });\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, React.createElement(Picker.Item, {\n      label: \"Select Category\",\n      value: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }), React.createElement(Picker.Item, {\n      label: \"Embroidery\",\n      value: \"Embroidery\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }), React.createElement(Picker.Item, {\n      label: \"Stitching\",\n      value: \"Stitching\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), React.createElement(Picker.Item, {\n      label: \"Alteration\",\n      value: \"Alteration\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }), React.createElement(Picker.Item, {\n      label: \"Designing\",\n      value: \"Designing\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), React.createElement(Picker.Item, {\n      label: \"Cut Work\",\n      value: \"CutWork\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    })), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"I will...\",\n      input: {\n        placeholder: 'do the task',\n        defaultValue: service.title,\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              title: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Starting at only, Rs: \",\n      input: {\n        placeholder: 'Rs: 5000',\n        defaultValue: service.price,\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              price: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"and in only...\",\n      input: {\n        placeholder: '3 days',\n        defaultValue: service.time,\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              time: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Here are the details\",\n      input: {\n        multiline: true,\n        placeholder: 'My service in detail...',\n        defaultValue: service.details,\n        style: {\n          height: \"100%\"\n        },\n        containerStyle: {\n          height: 100\n        },\n        onChangeText: function onChangeText(text) {\n          setService(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              details: text\n            });\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Add Service\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        if (!service.title || service.title.length < 10) {\n          alert(\"Please add appropriate title.\");\n        } else if (!service.price || service.price.length < 2) {\n          alert(\"Please add appropriate price. Minimum price is 99 Rupees.\");\n        } else if (!service.details || service.details.length < 30) {\n          alert(\"Please explain your service in details. Min. 30 chars.\");\n        } else if (covers[0] !== \"\") {\n          Firebase.addNewService(service, loggedIn.uid).then(function (r) {\n            if (r) {\n              navigation.navigate(\"Services\", {\n                reload: true\n              });\n            }\n          });\n        } else {\n          alert(\"Please add at least first image for service.\");\n        }\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"solid\",\n      title: \"Back to Profile\",\n      buttonStyle: {\n        borderColor: \"#797979\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ffffff\"\n      },\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/AddNewService.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","Firebase","saveData","Picker","AddNewService","navigation","route","loggedIn","service","setService","Array","fill","covers","setCovers","Platform","OS","requestCameraRollPermissionsAsync","status","alert","console","log","pickImage","index","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","serviceIMG","uri","then","link","previousState","cover","setLoggedin","styles","container","fontSize","fontWeight","paddingHorizontal","marginTop","name","contentContainer","marginBottom","display","justifyContent","flexDirection","flexWrap","map","key","marginHorizontal","category","itemValue","itemIndex","placeholder","defaultValue","title","onChangeText","text","price","time","multiline","details","style","height","containerStyle","borderColor","borderRadius","color","length","addNewService","uid","r","navigate","reload","goBack","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {Firebase} from \"../../connection/comms\";\nimport {saveData} from \"../../connection/AsyncStorage\";\nimport {Picker} from '@react-native-picker/picker';\n\n\nexport default function AddNewService({navigation, route}) {\n    const {loggedIn} = useContext(UserContext)\n    const [service, setService] = useState({})\n    const [covers, setCovers] = useState(new Array(5).fill(\"\"))\n\n\n    useEffect(() => {\n        //Image Permissions\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const {status} = await ImagePicker.requestCameraRollPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n    }, [])\n\n    console.log(service)\n\n    const pickImage = async (index) => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 0.5,\n        });\n        if (!result.cancelled) {\n            Firebase.serviceIMG(result.uri)\n                .then(link => {\n                    console.log(\"link, >>\", link)\n                    covers[index] = link\n                    setCovers(covers);\n                    setService(previousState => ({...previousState, cover: covers}));\n                })\n\n        }\n    };\n\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <Text style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginTop: 10\n                    }}>{route.name}</Text>\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        <View style={{\n                            marginBottom: 20,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"row\",\n                            flexWrap: \"wrap\"\n                        }}>\n\n                            {covers.map((cover, key) => (\n                                <Avatar source={{uri: covers[key]}} size={\"medium\"}\n                                        containerStyle={{marginHorizontal: 10,}}\n                                        title={key + 1} showEditButton={true}\n                                        onEditPress={() => pickImage(key)}/>\n                            ))}\n\n                        </View>\n                        <Picker\n                            selectedValue={service.category}\n                            onValueChange={(itemValue, itemIndex) => {\n                                setService(previousState => ({...previousState, category: itemValue}))\n                            }\n                            }>\n                            <Picker.Item label=\"Select Category\" value=\"none\" />\n                            <Picker.Item label=\"Embroidery\" value=\"Embroidery\" />\n                            <Picker.Item label=\"Stitching\" value=\"Stitching\" />\n                            <Picker.Item label=\"Alteration\" value=\"Alteration\" />\n                            <Picker.Item label=\"Designing\" value=\"Designing\" />\n                            <Picker.Item label=\"Cut Work\" value=\"CutWork\" />\n                        </Picker>\n                        <ListItem\n                            topDivider\n                            title=\"I will...\"\n                            input={{\n                                placeholder: 'do the task',\n                                defaultValue: service.title,\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, title: text}));\n                                }\n                            }}\n                        />\n\n                        <ListItem\n                            topDivider\n                            title=\"Starting at only, Rs: \"\n                            input={{\n                                placeholder: 'Rs: 5000',\n                                defaultValue: service.price,\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, price: text}));\n                                }\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"and in only...\"\n                            input={{\n                                placeholder: '3 days',\n                                defaultValue: service.time,\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, time: text}));\n                                }\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Here are the details\"\n                            input={{\n                                multiline: true,\n                                placeholder: 'My service in detail...',\n                                defaultValue: service.details,\n                                style: {height: \"100%\"},\n                                containerStyle: {height: 100},\n                                onChangeText: (text) => {\n                                    setService(previousState => ({...previousState, details: text}));\n                                }\n                            }}\n                        />\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Add Service\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={function () {\n                                if (!service.title || service.title.length < 10) {\n                                    alert(\"Please add appropriate title.\")\n                                } else if (!service.price || service.price.length < 2) {\n                                    alert(\"Please add appropriate price. Minimum price is 99 Rupees.\")\n                                } else if (!service.details || service.details.length < 30) {\n                                    alert(\"Please explain your service in details. Min. 30 chars.\")\n                                } else if (covers[0] !== \"\") {\n                                    Firebase.addNewService(service, loggedIn.uid).then(r => {\n                                        if (r) {\n                                            navigation.navigate(\"Services\", {reload: true})\n                                        }\n                                    })\n                                } else {\n                                    alert(\"Please add at least first image for service.\")\n                                }\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n                        <Button\n                            type={\"solid\"}\n                            title={\"Back to Profile\"}\n                            buttonStyle={{borderColor: \"#797979\", borderRadius: 20}}\n                            titleStyle={{color: \"#ffffff\"}}\n                            onPress={() => {\n                                navigation.goBack()\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n\n    contentContainer: {\n        paddingTop: 30,\n        paddingBottom: 20\n    },\n\n});"]},"metadata":{},"sourceType":"module"}