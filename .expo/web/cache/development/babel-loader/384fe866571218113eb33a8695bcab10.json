{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\Measurements.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport { MeasurementsHandler } from \"../../connection/MeasurementsHandler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport * as ImagePicker from \"expo-image-picker\";\nimport { saveData } from \"../../connection/AsyncStorage\";\nexport default function Measurements(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      measurementsState = _useState2[0],\n      setMeasurementsState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      measurements_name = _useState4[0],\n      setmeasurements_name = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    if (route.params.data) {\n      setMeasurementsState(route.params.data.m);\n      setmeasurements_name(route.params.data.n);\n    }\n  }, []);\n  var measurementsList = {\n    arms: \"Arms Length\",\n    shoulder: \"Shoulders\",\n    chest: \"Chest\",\n    stomach: \"Stomach\",\n    waist: \"Waist\",\n    armHole: \"Arms Hole\",\n    shirtLength: \"Shirt Length\",\n    collar: \"Collar Size\",\n    pantsLength: \"Pants Length\",\n    pantsWaist: \"Pants Waist\",\n    crotch: \"Crotch\",\n    cuffs: \"Cuffs Size\"\n  };\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginVertical: 10\n      },\n      placeholder: \"Enter Measurements Name\",\n      defaultValue: measurements_name,\n      onChangeText: function onChangeText(t) {\n        return setmeasurements_name(t);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: \"normal\",\n        paddingHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Add your measurements precisely. These will be shared with the tailors you hire. All measurements are recorded in inches.\"), React.createElement(View, {\n      style: {\n        paddingHorizontal: 20,\n        paddingVertical: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      title: \"Magic Measurements\",\n      type: \"outline\",\n      buttonStyle: {\n        borderColor: \"pink\"\n      },\n      containerStyle: {\n        width: 220\n      },\n      titleStyle: {\n        color: \"pink\"\n      },\n      icon: React.createElement(SimpleLineIcons, {\n        name: \"magic-wand\",\n        size: 20,\n        color: \"pink\",\n        style: {\n          paddingHorizontal: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 39\n        }\n      }),\n      onPress: function onPress() {\n        return navigation.navigate(\"MagicMeasurement\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    })), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, Object.keys(measurementsList).map(function (key) {\n      return React.createElement(ListItem, {\n        key: key,\n        topDivider: true,\n        title: measurementsList[key],\n        input: {\n          placeholder: '00.0',\n          defaultValue: measurementsState[key],\n          value: measurementsState[key],\n          onChangeText: function onChangeText(text) {\n            setMeasurementsState(function (previousState) {\n              return _objectSpread(_objectSpread({}, previousState), {}, _defineProperty({}, key, text.replace(/[^0-9\\.]/g, '')));\n            });\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      });\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Update Measurements\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        if (Object.keys(measurementsState).length < Object.keys(measurementsList).length) {\n          alert(\"Please fill in all information.\");\n        } else {\n          setLoggedin(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              measurements: measurementsState\n            });\n          });\n          MeasurementsHandler.addNew({\n            n: measurements_name,\n            m: measurementsState\n          }, loggedIn.uid).then(function (r) {\n            if (r) {\n              navigation.goBack();\n            }\n          });\n        }\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }), route.params.addNew ? null : React.createElement(Button, {\n      type: \"outline\",\n      title: \"Delete\",\n      buttonStyle: {\n        borderColor: \"red\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"red\"\n      },\n      onPress: function onPress() {\n        MeasurementsHandler.deleteMeasurement(route.params.data.id, loggedIn.uid).then(function (r) {\n          navigation.goBack();\n        });\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 55\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/Measurements.js"],"names":["React","useContext","useEffect","useState","Avatar","Button","Input","ListItem","Text","Divider","UserContext","Firebase","MeasurementsHandler","Ionicons","SimpleLineIcons","ImagePicker","saveData","Measurements","navigation","route","measurementsState","setMeasurementsState","measurements_name","setmeasurements_name","Platform","OS","requestCameraRollPermissionsAsync","status","alert","params","data","m","n","measurementsList","arms","shoulder","chest","stomach","waist","armHole","shirtLength","collar","pantsLength","pantsWaist","crotch","cuffs","loggedIn","setLoggedin","styles","container","fontSize","fontWeight","paddingHorizontal","marginVertical","t","paddingVertical","borderColor","width","color","navigate","contentContainer","Object","keys","map","key","placeholder","defaultValue","value","onChangeText","text","previousState","replace","borderRadius","length","measurements","addNew","uid","then","r","goBack","marginTop","marginHorizontal","deleteMeasurement","id","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {Firebase} from \"../../connection/comms\";\nimport {MeasurementsHandler} from \"../../connection/MeasurementsHandler\";\nimport {Ionicons} from \"@expo/vector-icons\";\nimport {SimpleLineIcons} from '@expo/vector-icons';\nimport * as ImagePicker from \"expo-image-picker\";\nimport {saveData} from \"../../connection/AsyncStorage\";\n\n\nexport default function Measurements({navigation, route}) {\n    const [measurementsState, setMeasurementsState] = useState({})\n    const [measurements_name, setmeasurements_name] = useState(\"\")\n\n    useEffect(() => {\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const {status} = await ImagePicker.requestCameraRollPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n    }, []);\n\n    useEffect(() => {\n        if (route.params.data) {\n            setMeasurementsState(route.params.data.m)\n            setmeasurements_name((route.params.data.n))\n        }\n    }, [])\n\n    let measurementsList = {\n        arms: \"Arms Length\",\n        shoulder: \"Shoulders\",\n        chest: \"Chest\",\n        stomach: \"Stomach\",\n        waist: \"Waist\",\n        armHole: \"Arms Hole\",\n        shirtLength: \"Shirt Length\",\n        collar: \"Collar Size\",\n        pantsLength: \"Pants Length\",\n        pantsWaist: \"Pants Waist\",\n        crotch: \"Crotch\",\n        cuffs: \"Cuffs Size\"\n    }\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <TextInput style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginVertical: 10\n                    }} placeholder={\"Enter Measurements Name\"} defaultValue={measurements_name}\n                               onChangeText={t => setmeasurements_name(t)}/>\n                    <Text style={{fontSize: 14, fontWeight: \"normal\", paddingHorizontal: 20}}>Add your measurements\n                        precisely. These will be shared with the tailors you hire. All measurements are recorded in\n                        inches.</Text>\n\n                    <View style={{paddingHorizontal: 20, paddingVertical: 20}}>\n                        <Button title={\"Magic Measurements\"} type={\"outline\"}\n                                buttonStyle={{borderColor: \"pink\"}}\n                                containerStyle={{width: 220}}\n                                titleStyle={{color: \"pink\"}}\n                                icon={<SimpleLineIcons name=\"magic-wand\" size={20} color=\"pink\" style={{paddingHorizontal: 10}}/>}\n                                onPress={()=>navigation.navigate(\"MagicMeasurement\")}\n                        />\n                    </View>\n\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        {Object.keys(measurementsList).map(key => {\n                            return (<ListItem\n                                key={key}\n                                topDivider\n                                title={measurementsList[key]}\n                                input={{\n                                    placeholder: '00.0',\n                                    defaultValue: measurementsState[key],\n                                    value: measurementsState[key],\n                                    onChangeText: text => {\n                                        setMeasurementsState(previousState => ({\n                                            ...previousState,\n                                            [key]: text.replace(/[^0-9\\.]/g, '')\n                                        }));\n                                    }\n                                }}\n                            />)\n                        })}\n\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Update Measurements\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={() => {\n                                if (Object.keys(measurementsState).length < Object.keys(measurementsList).length) {\n                                    alert(\"Please fill in all information.\")\n                                } else {\n                                    setLoggedin(previousState => ({...previousState, measurements: measurementsState}));\n                                    MeasurementsHandler.addNew({\n                                        n: measurements_name,\n                                        m: measurementsState\n                                    }, loggedIn.uid).then(r => {\n                                        if (r) {\n                                            navigation.goBack()\n                                        }\n                                    })\n                                }\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n                        {route.params.addNew ? null : <Button\n                            type={\"outline\"}\n                            title={\"Delete\"}\n                            buttonStyle={{borderColor: \"red\", borderRadius: 20}}\n                            titleStyle={{color: \"red\"}}\n                            onPress={() => {\n                                MeasurementsHandler.deleteMeasurement(route.params.data.id, loggedIn.uid).then(r => {\n                                    navigation.goBack()\n                                })\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />}\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n\n    contentContainer: {\n        paddingTop: 30,\n        paddingBottom: 20\n    },\n\n});\n"]},"metadata":{},"sourceType":"module"}