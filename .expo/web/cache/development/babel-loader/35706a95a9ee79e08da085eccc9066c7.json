{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\MagicMeasurement.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Image, Overlay } from \"react-native-elements\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport firebase from \"firebase\";\nimport frontPose from \"../../assets/images/placeholder.png\";\n\nfunction MagicMeasurement(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      front = _useState2[0],\n      setFront = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      side = _useState4[0],\n      setSide = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      diff = _useState6[0],\n      setDiff = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uploading = _useState8[0],\n      setUploading = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      measuring = _useState10[0],\n      setMeasuring = _useState10[1];\n\n  var pickImage = function pickImage() {\n    var result, response, blob, ref, task;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(result.uri));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 9:\n            blob = _context.sent;\n            ref = firebase.storage().ref('/temp/measure');\n            task = ref.put(blob);\n            setUploading(true);\n            console.log(\"Running Upload Task.\");\n            return _context.abrupt(\"return\", task.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              setUploading(false);\n              return downloadURL;\n            }));\n\n          case 17:\n            setUploading(false);\n            return _context.abrupt(\"return\", null);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {}, [uploading]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet blanditiis dicta dolorem eligendi et explicabo illum, incidunt magni necessitatibus nesciunt nulla placeat quaerat quasi quis reprehenderit similique sint voluptates.\"), React.createElement(Text, {\n    style: styles.uploadTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Upload Your Images \", uploading && React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: \"grey\",\n      letterSpacing: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 77\n    }\n  }, \" Uploading...\")), React.createElement(View, {\n    style: styles.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      pickImage().then(function (r) {\n        if (r !== undefined) {\n          setFront(r);\n        } else {\n          console.log(\"Upload cancelled\");\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: front !== null ? {\n      uri: front\n    } : frontPose,\n    PlaceholderContent: React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }\n    }, \"loading..\"),\n    style: {\n      height: 94,\n      width: 94,\n      borderRadius: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      pickImage().then(function (r) {\n        if (r !== undefined) {\n          setSide(r);\n        } else {\n          console.log(\"Upload cancelled\");\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: side !== null ? {\n      uri: side\n    } : frontPose,\n    PlaceholderContent: React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }\n    }, \"loading..\"),\n    style: {\n      height: 94,\n      width: 94,\n      borderRadius: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      pickImage().then(function (r) {\n        if (r !== undefined) {\n          setDiff(r);\n        } else {\n          console.log(\"Upload cancelled\");\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: diff !== null ? {\n      uri: diff\n    } : frontPose,\n    PlaceholderContent: React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }, \"loading..\"),\n    style: {\n      height: 94,\n      width: 94,\n      borderRadius: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })))), React.createElement(View, {\n    style: styles.measureButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Run A.I Measurements\",\n    color: \"white\",\n    onPress: function onPress() {\n      setMeasuring(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), React.createElement(Overlay, {\n    isVisible: measuring,\n    containerStyle: {\n      backgroundColor: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Processing\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: \"200\"\n  },\n  uploadTxt: {\n    fontWeight: \"bold\",\n    color: \"grey\",\n    fontSize: 18,\n    marginTop: 50,\n    marginBottom: 30\n  },\n  images: {\n    marginBottom: 50,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  picker: {\n    height: 100,\n    width: 100,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: \"#cacaca\",\n    borderStyle: \"dashed\",\n    padding: 1\n  },\n  measureButton: {\n    padding: 6,\n    borderRadius: 6,\n    marginTop: 20,\n    backgroundColor: \"pink\"\n  }\n});\nexport default MagicMeasurement;","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/MagicMeasurement.js"],"names":["React","useEffect","useState","Image","Overlay","ImagePicker","firebase","frontPose","MagicMeasurement","props","front","setFront","side","setSide","diff","setDiff","uploading","setUploading","measuring","setMeasuring","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","fetch","uri","response","blob","ref","storage","task","put","console","log","snapshot","getDownloadURL","then","downloadURL","styles","container","heading","uploadTxt","fontSize","color","letterSpacing","images","r","undefined","picker","height","width","borderRadius","measureButton","backgroundColor","StyleSheet","create","flex","padding","fontWeight","marginTop","marginBottom","flexDirection","justifyContent","borderWidth","borderColor","borderStyle"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {Image, Overlay} from \"react-native-elements\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport firebase from \"firebase\";\r\n\r\nimport frontPose from \"../../assets/images/placeholder.png\"\r\n\r\n\r\nfunction MagicMeasurement(props) {\r\n\r\n    const [front, setFront] = useState(null)\r\n    const [side, setSide] = useState(null)\r\n    const [diff, setDiff] = useState(null)\r\n    const [uploading, setUploading] = useState(false)\r\n    const [measuring, setMeasuring] = useState(false)\r\n\r\n    const pickImage = async () => {\r\n\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [1, 1],\r\n            quality: 0.5,\r\n        });\r\n\r\n        if (!result.cancelled) {\r\n            const response = await fetch(result.uri);\r\n            const blob = await response.blob();\r\n\r\n            const ref = firebase.storage().ref('/temp/measure');\r\n            const task = ref.put(blob);\r\n            setUploading(true)\r\n            console.log(\"Running Upload Task.\")\r\n            return task.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                setUploading(false)\r\n                return downloadURL;\r\n            });\r\n        }\r\n        else{\r\n            setUploading(false)\r\n            return null\r\n        }\r\n    };\r\n    useEffect(()=>{\r\n\r\n    },[uploading])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.heading}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet blanditiis\r\n                dicta dolorem eligendi et explicabo illum, incidunt magni necessitatibus nesciunt nulla placeat quaerat\r\n                quasi quis reprehenderit similique sint voluptates.</Text>\r\n\r\n            <Text style={styles.uploadTxt}>Upload Your Images {uploading && <Text style={{fontSize:12,color:\"grey\",letterSpacing:2,}}> Uploading...</Text>}</Text>\r\n\r\n            <View style={styles.images}>\r\n                <TouchableOpacity onPress={() => {\r\n                    pickImage().then(r => {\r\n                        if(r !== undefined){\r\n                            setFront(r)\r\n                        }else{\r\n                            console.log(\"Upload cancelled\")\r\n                        }\r\n                    })\r\n                }}>\r\n                    <View style={styles.picker}>\r\n                        <Image\r\n                            source={front !== null ? {uri: front} : frontPose}\r\n                            PlaceholderContent={<Text>loading..</Text>}\r\n                            style={{height: 94, width: 94, borderRadius: 6}}\r\n                        />\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => {\r\n                    pickImage().then(r => {\r\n                        if(r !== undefined){\r\n                            setSide(r)\r\n                        }else{\r\n                            console.log(\"Upload cancelled\")\r\n                        }\r\n                    })\r\n                }}>\r\n                    <View style={styles.picker}>\r\n                        <Image\r\n                            source={side !== null ? {uri: side} : frontPose}\r\n                            PlaceholderContent={<Text>loading..</Text>}\r\n                            style={{height: 94, width: 94, borderRadius: 6}}\r\n                        />\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => {\r\n                    pickImage().then(r => {\r\n                        if(r !== undefined){\r\n                            setDiff(r)\r\n                        }else{\r\n                            console.log(\"Upload cancelled\")\r\n                        }\r\n                    })\r\n                }}>\r\n                    <View style={styles.picker}>\r\n                        <Image\r\n                            source={diff !== null ? {uri: diff} : frontPose}\r\n                            PlaceholderContent={<Text>loading..</Text>}\r\n                            style={{height: 94, width: 94, borderRadius: 6}}\r\n                        />\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n\r\n            </View>\r\n            <View style={styles.measureButton}>\r\n                <Button title={\"Run A.I Measurements\"} color={\"white\"} onPress={() => {\r\n\r\n                    setMeasuring(true)\r\n\r\n                    // if (front !== null && side !== null && diff !== null){\r\n                    //     console.log({\r\n                    //         front,side,diff\r\n                    //     })\r\n                    //\r\n                    // }else{\r\n                    //     alert(\"Please upload all images.\")\r\n                    // }\r\n                }}/>\r\n            </View>\r\n            <Overlay isVisible={measuring} containerStyle={{backgroundColor: \"green\"}}>\r\n                <View>\r\n                    <Text>Processing</Text>\r\n                </View>\r\n            </Overlay>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        padding: 20,\r\n    },\r\n\r\n    heading: {\r\n        fontSize: 18,\r\n        fontWeight: \"200\",\r\n    },\r\n    uploadTxt: {\r\n        fontWeight: \"bold\",\r\n        color: \"grey\",\r\n        fontSize: 18,\r\n        marginTop: 50,\r\n        marginBottom: 30,\r\n\r\n    },\r\n    images: {\r\n        marginBottom: 50,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    picker: {\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 6,\r\n        borderWidth: 2,\r\n        borderColor: \"#cacaca\",\r\n        borderStyle: \"dashed\",\r\n        padding: 1,\r\n    },\r\n    measureButton: {\r\n        padding: 6,\r\n        borderRadius: 6,\r\n        marginTop: 20,\r\n        backgroundColor: \"pink\",\r\n    }\r\n\r\n});\r\n\r\n\r\nexport default MagicMeasurement;\r\n\r\n"]},"metadata":{},"sourceType":"module"}