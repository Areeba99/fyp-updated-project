{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\ShowServiceDetails.js\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, ListItem, Text } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { SliderBox } from \"react-native-image-slider-box\";\nimport Modal from 'react-native-modal';\nimport { MeasurementsHandler } from \"../../connection/MeasurementsHandler\";\nimport { Orders } from \"../../connection/OrderHandler\";\nexport default function ShowServiceDetails(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mList = _useState4[0],\n      setMList = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      order = _useState6[0],\n      setOrder = _useState6[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  function placeOrder(mm) {\n    order.measurements = mm;\n    Orders.newOrder(order).then(function (r) {\n      toggleModal();\n      navigation.navigate('Profile', {\n        screen: 'BuyingOrders',\n        params: {\n          reload: true\n        }\n      });\n    });\n  }\n\n  function createOrder(service, buyer) {\n    setOrder({\n      buyer: buyer.uid,\n      buyerName: buyer.name,\n      title: service.title,\n      measurements: {},\n      seller: service.seller,\n      price: service.price,\n      start: Date.now(),\n      completed: false,\n      accepted: false,\n      delivered: false,\n      service: service.id,\n      time: service.time,\n      ratings: 0\n    });\n    MeasurementsHandler.getAll(buyer.uid).then(function (r) {\n      if (r.length < 1) {\n        alert(\"Please add measurements. \\n Visit Profile > Measurements\");\n      } else {\n        setMList(r);\n        toggleModal();\n      }\n    });\n  }\n\n  return React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var _route$params$service, _route$params$service2, _route$params$service4, _route$params$service5, _route$params$service6, _route$params$service7, _route$params$service8;\n\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, React.createElement(Modal, {\n      isVisible: isModalVisible,\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        paddingVertical: 20,\n        backgroundColor: \"white\",\n        paddingHorizontal: 20,\n        borderRadius: 20,\n        height: \"50%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"Select Your Measurements\"), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, mList && mList.map(function (mrmt) {\n      return React.createElement(ListItem, {\n        title: mrmt.n,\n        bottomDivider: true,\n        onPress: function onPress() {\n          placeOrder(mrmt.m);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 61\n        }\n      });\n    })), React.createElement(Button, {\n      title: \"Cancel\",\n      onPress: toggleModal,\n      buttonStyle: {\n        borderRadius: 20\n      },\n      type: \"outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }))), React.createElement(SliderBox, {\n      images: (_route$params$service = route.params.service) == null ? void 0 : _route$params$service.cover,\n      sliderBoxHeight: 300,\n      dotStyle: {\n        marginBottom: 20\n      },\n      dotColor: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'rgba(255,255,255,1)',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        paddingHorizontal: 20,\n        marginTop: -20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: -25,\n        justifyContent: \"flex-end\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, loggedIn.uid === ((_route$params$service2 = route.params.service) == null ? void 0 : _route$params$service2.seller) ? React.createElement(React.Fragment, null, React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-trash\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 51\n        }\n      }),\n      buttonStyle: {\n        backgroundColor: \"red\",\n        width: 50,\n        height: 50,\n        borderRadius: 50\n      },\n      onPress: function onPress() {\n        return Firebase.deleteThisService(route.params.service.id).then(function (r) {\n          if (r === true) {\n            navigation.navigate(\"Services\", {\n              reload: true\n            });\n          } else {\n            alert(r);\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }), React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"md-create\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 51\n        }\n      }),\n      buttonStyle: {\n        backgroundColor: \"green\",\n        width: 50,\n        height: 50,\n        borderRadius: 50,\n        marginHorizontal: 10\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"NewService\", {\n          service: route.params.service,\n          title: \"Modify Service\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    })) : React.createElement(React.Fragment, null, React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-cart\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 55\n        }\n      }),\n      title: \" Purchase\",\n      buttonStyle: {\n        backgroundColor: \"#0085a2\",\n        width: 150,\n        height: 50,\n        borderRadius: 50,\n        marginRight: 10\n      },\n      onPress: function onPress() {\n        var _route$params$service3;\n\n        Alert.alert(\"Confirm Purchase\", \"Do you want to purchase this offer at Rs.\" + ((_route$params$service3 = route.params.service) == null ? void 0 : _route$params$service3.price) + \"?\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Order Cancelled\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return createOrder(route.params.service, loggedIn);\n          }\n        }]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }), React.createElement(Button, {\n      icon: React.createElement(Ionicons, {\n        name: \"ios-mail\",\n        size: 28,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 51\n        }\n      }),\n      title: \" Chat\",\n      buttonStyle: {\n        backgroundColor: \"#a362fd\",\n        width: 100,\n        height: 50,\n        borderRadius: 50\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Messages\", {\n          screen: \"Chat\",\n          params: {\n            contact: route.params.service.seller,\n            title: \"Chat with SELLER\"\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }))), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        color: \"grey\",\n        fontStyle: \"italic\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Category: \" + ((_route$params$service4 = route.params.service) == null ? void 0 : _route$params$service4.category) + \", Est. Time: \" + ((_route$params$service5 = route.params.service) == null ? void 0 : _route$params$service5.time)), React.createElement(Text, {\n      style: {\n        fontSize: 24,\n        color: \"grey\",\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, (_route$params$service6 = route.params.service) == null ? void 0 : _route$params$service6.title), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        color: \"grey\",\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, \"Starting at: PKR \" + ((_route$params$service7 = route.params.service) == null ? void 0 : _route$params$service7.price)), React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        color: \"grey\",\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, (_route$params$service8 = route.params.service) == null ? void 0 : _route$params$service8.details), React.createElement(Button, {\n      type: \"solid\",\n      title: \"Go Back\",\n      buttonStyle: {\n        borderColor: \"#797979\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ffffff\"\n      },\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }))));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/ShowServiceDetails.js"],"names":["React","useState","Button","ListItem","Text","UserContext","Firebase","Ionicons","SliderBox","Modal","MeasurementsHandler","Orders","ShowServiceDetails","navigation","route","isModalVisible","setModalVisible","mList","setMList","order","setOrder","toggleModal","placeOrder","mm","measurements","newOrder","then","r","navigate","screen","params","reload","createOrder","service","buyer","uid","buyerName","name","title","seller","price","start","Date","now","completed","accepted","delivered","id","time","ratings","getAll","length","alert","loggedIn","setLoggedin","Platform","OS","styles","container","flex","paddingVertical","backgroundColor","paddingHorizontal","borderRadius","height","fontSize","fontWeight","textAlign","contentContainer","map","mrmt","n","m","cover","marginBottom","borderTopLeftRadius","borderTopRightRadius","marginTop","justifyContent","display","flexDirection","width","deleteThisService","marginHorizontal","marginRight","Alert","text","onPress","console","log","style","contact","color","fontStyle","category","details","borderColor","goBack","StyleSheet","create","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Alert, KeyboardAvoidingView, Platform, ScrollView, StyleSheet, View} from 'react-native';\r\nimport {Button, ListItem, Text} from \"react-native-elements\";\r\nimport UserContext from \"../../connection/userContext\";\r\nimport {Firebase} from \"../../connection/comms\";\r\nimport {Ionicons} from \"@expo/vector-icons\";\r\nimport {SliderBox} from \"react-native-image-slider-box\";\r\nimport Modal from 'react-native-modal';\r\nimport {MeasurementsHandler} from \"../../connection/MeasurementsHandler\";\r\nimport {Orders} from \"../../connection/OrderHandler\";\r\n\r\n\r\nexport default function ShowServiceDetails({navigation, route}) {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [mList, setMList] = useState(null)\r\n    const [order, setOrder] = useState(null)\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n    };\r\n\r\n    function placeOrder(mm){\r\n        order.measurements = mm\r\n        Orders.newOrder(order).then(r => {\r\n            toggleModal()\r\n            navigation.navigate('Profile', {\r\n                screen: 'BuyingOrders',\r\n                params: { reload: true },\r\n            });\r\n        })\r\n    }\r\n    function createOrder(service, buyer) {\r\n        setOrder({\r\n            buyer: buyer.uid,\r\n            buyerName: buyer.name,\r\n            title: service.title,\r\n            measurements: {},\r\n            seller: service.seller,\r\n            price: service.price,\r\n            start: Date.now(),\r\n            completed: false,\r\n            accepted: false,\r\n            delivered: false,\r\n            service: service.id,\r\n            time: service.time,\r\n            ratings: 0\r\n        })\r\n        MeasurementsHandler.getAll(buyer.uid).then(r => {\r\n            if(r.length < 1){\r\n                alert(\"Please add measurements. \\n Visit Profile > Measurements\")\r\n            }else{\r\n                setMList(r)\r\n                toggleModal()\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <UserContext.Consumer>\r\n            {({loggedIn, setLoggedin}) => (\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\r\n                                      style={styles.container} keyboardVerticalOffset={100}>\r\n                    <Modal isVisible={isModalVisible} style={{flex: 1}} >\r\n                        <View style={{paddingVertical: 20, backgroundColor: \"white\", paddingHorizontal: 20, borderRadius: 20, height: \"50%\"}}>\r\n                            <Text style={{fontSize: 18, fontWeight: \"bold\", textAlign: \"center\"}}>{\"Select Your Measurements\"}</Text>\r\n                            <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n                                {mList && mList.map(mrmt => <ListItem title={mrmt.n} bottomDivider onPress={()=>{\r\n                                    placeOrder(mrmt.m)\r\n                                }}/>)}\r\n                            </ScrollView>\r\n                            <Button title=\"Cancel\" onPress={toggleModal} buttonStyle={{borderRadius: 20}} type={\"outline\"} />\r\n                        </View>\r\n                    </Modal>\r\n\r\n                    <SliderBox images={route.params.service?.cover} sliderBoxHeight={300} dotStyle={{marginBottom: 20}}\r\n                               dotColor={\"red\"}/>\r\n                    <View style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'rgba(255,255,255,1)',\r\n                        borderTopLeftRadius: 20,\r\n                        borderTopRightRadius: 20,\r\n                        paddingHorizontal: 20,\r\n                        marginTop: -20,\r\n                    }}>\r\n                        <View style={{\r\n                            marginTop: -25,\r\n                            justifyContent: \"flex-end\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                        }}>\r\n                            {loggedIn.uid === route.params.service?.seller ?\r\n                                <>\r\n                                    <Button icon={<Ionicons name={\"ios-trash\"} size={28} color={\"white\"}/>}\r\n                                            buttonStyle={{\r\n                                                backgroundColor: \"red\",\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                            }}\r\n                                            onPress={() => (\r\n                                                Firebase.deleteThisService(route.params.service.id).then(r => {\r\n                                                    if (r === true) {\r\n                                                        navigation.navigate(\"Services\", {reload: true})\r\n                                                    } else {\r\n                                                        alert(r)\r\n                                                    }\r\n                                                })\r\n                                            )}\r\n                                    />\r\n                                    <Button icon={<Ionicons name={\"md-create\"} size={28} color={\"white\"}/>}\r\n                                            buttonStyle={{\r\n                                                backgroundColor: \"green\",\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                marginHorizontal: 10,\r\n                                            }}\r\n                                            onPress={() => navigation.navigate(\"NewService\", {\r\n\r\n                                                service: route.params.service,\r\n                                                title: \"Modify Service\"\r\n\r\n                                            })}\r\n                                    />\r\n                                </> : <><Button icon={<Ionicons name={\"ios-cart\"} size={28} color={\"white\"}/>}\r\n                                                title={\" Purchase\"}\r\n                                                buttonStyle={{\r\n                                                    backgroundColor: \"#0085a2\",\r\n                                                    width: 150,\r\n                                                    height: 50,\r\n                                                    borderRadius: 50,\r\n                                                    marginRight: 10,\r\n                                                }}\r\n                                                onPress={() => {\r\n                                                    Alert.alert(\"Confirm Purchase\",\r\n                                                        \"Do you want to purchase this offer at Rs.\" + route.params.service?.price + \"?\",\r\n                                                        [{\r\n                                                            text: \"Cancel\",\r\n                                                            onPress: () => console.log(\"Order Cancelled\"),\r\n                                                            style: \"cancel\"\r\n                                                        },\r\n                                                            {\r\n                                                                text: \"OK\",\r\n                                                                onPress: () => createOrder(route.params.service, loggedIn)\r\n                                                            }\r\n                                                        ])\r\n                                                }}\r\n                                />\r\n\r\n                                    <Button icon={<Ionicons name={\"ios-mail\"} size={28} color={\"white\"}/>}\r\n                                            title={\" Chat\"}\r\n                                            buttonStyle={{\r\n                                                backgroundColor: \"#a362fd\",\r\n                                                width: 100,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                            }}\r\n                                            onPress={() => navigation.navigate(\"Messages\", {\r\n                                                screen: \"Chat\",\r\n                                                params: {\r\n                                                    contact: route.params.service.seller,\r\n                                                    title: \"Chat with SELLER\"\r\n                                                }\r\n                                            })}\r\n                                        // onPress={()=>navigation.navigate(\"Chat\",{contact: route.params.service.seller, title: \"Chat with SELLER\"})}\r\n                                    />\r\n                                </>}\r\n\r\n\r\n                        </View>\r\n                        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n\r\n                            <Text style={{\r\n                                fontSize: 14,\r\n                                color: \"grey\",\r\n                                fontStyle: \"italic\",\r\n                            }}>{\"Category: \" + route.params.service?.category + \", Est. Time: \" + route.params.service?.time}</Text>\r\n                            <Text style={{\r\n                                fontSize: 24,\r\n                                color: \"grey\",\r\n                                fontWeight: \"bold\",\r\n                            }}>{route.params.service?.title}</Text>\r\n\r\n                            <Text style={{\r\n                                fontSize: 14,\r\n                                color: \"grey\",\r\n                                marginTop: 10,\r\n                            }}>{\"Starting at: PKR \" + route.params.service?.price}</Text>\r\n                            <Text style={{\r\n                                fontSize: 18,\r\n                                color: \"grey\",\r\n                                marginTop: 20,\r\n                            }}>{route.params.service?.details}</Text>\r\n\r\n                            <Button\r\n                                type={\"solid\"}\r\n                                title={\"Go Back\"}\r\n                                buttonStyle={{borderColor: \"#797979\", borderRadius: 20}}\r\n                                titleStyle={{color: \"#ffffff\"}}\r\n                                onPress={() => {\r\n                                    navigation.goBack()\r\n\r\n                                }}\r\n                                style={{marginTop: 20, marginHorizontal: 20}}\r\n                            />\r\n\r\n\r\n                        </ScrollView>\r\n\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n\r\n            )}\r\n        </UserContext.Consumer>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n\r\n    contentContainer: {\r\n        paddingTop: 30,\r\n        paddingBottom: 20\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}