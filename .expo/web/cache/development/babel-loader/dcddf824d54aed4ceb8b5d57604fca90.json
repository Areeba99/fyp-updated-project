{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport { deleteUserData, saveData } from \"../connection/AsyncStorage\";\nimport { Firebase } from \"../connection/comms\";\nimport Toast from \"../components/ToastMessage\";\nimport firebase from \"firebase\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn,\n      setLoggedin = _useContext.setLoggedin;\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    firebase.firestore().collection(\"users\").doc(loggedIn.uid).get().then(function (snapshot) {\n      console.log(\"FROM FIREBASE, Saving user in storage.\");\n      saveData(snapshot.data()).then();\n    });\n  }, []);\n\n  var pickImage = function pickImage(uid) {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              Firebase.userAvatar(result.uri, uid).then(function (dpLink) {\n                console.log(dpLink);\n                Firebase.updateData(\"dp\", dpLink, uid).then(function (s) {\n                  if (s === true) {\n                    setLoggedin(function (previousState) {\n                      return _objectSpread(_objectSpread({}, previousState), {}, {\n                        dp: dpLink\n                      });\n                    });\n                    saveData(loggedIn).then(function () {\n                      return alert(\"Profile Picture Updated.\");\n                    });\n                  }\n                });\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, loggedIn.profileStatus === \"incomplete\" ? React.createElement(Toast, {\n      message: \"Please Complete your profile.\",\n      color: \"#ef3caf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }) : null, React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, React.createElement(Avatar, {\n      source: {\n        uri: loggedIn.dp\n      },\n      size: \"xlarge\",\n      rounded: true,\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage(loggedIn.uid);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    })), React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Write bio here (300 chars max)\",\n      defaultValue: loggedIn.bio,\n      maxLength: 300,\n      multiline: true,\n      onChangeText: function onChangeText(e) {\n        setLoggedin(function (previousState) {\n          return _objectSpread(_objectSpread({}, previousState), {}, {\n            bio: e\n          });\n        });\n      },\n      style: {\n        textAlign: \"center\",\n        width: \"80%\",\n        height: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      onPress: function onPress() {\n        Firebase.updateData(\"bio\", loggedIn.bio, loggedIn.uid).then(function (r) {\n          if (r === true) {\n            saveData(loggedIn).then(function (r) {\n              return alert(\"Updated Profile.\");\n            });\n          }\n        });\n      },\n      title: \"Update Bio\",\n      titleStyle: {\n        fontSize: 12,\n        color: \"#ef3caf\",\n        textDecorationLine: \"underline\"\n      },\n      type: \"clear\",\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Full Name\",\n      input: {\n        placeholder: 'Type Here',\n        defaultValue: loggedIn.name,\n        disabled: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Email\",\n      input: {\n        placeholder: 'Type Here',\n        defaultValue: loggedIn.email,\n        textContentType: \"emailAddress\",\n        disabled: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Location\",\n      input: {\n        placeholder: 'Type Here',\n        textContentType: \"location\",\n        defaultValue: loggedIn.city,\n        onFocus: function onFocus() {\n          navigation.push(\"Location\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      bottomDivider: true,\n      title: \"Seller Mode\",\n      checkBox: {\n        center: true,\n        iconRight: true,\n        checkedTitle: \"Disable \",\n        title: \"Enable \",\n        checked: loggedIn.sellerMode,\n        onPress: function onPress() {\n          if (loggedIn.sellerMode) {\n            setLoggedin(function (previousState) {\n              return _objectSpread(_objectSpread({}, previousState), {}, {\n                sellerMode: false\n              });\n            });\n            Firebase.updateData(\"sellerMode\", false, loggedIn.uid).then(function (r) {\n              if (r === true) {\n                saveData(loggedIn).then(function () {\n                  return console.log(\"SAVED SELLER MODE\", loggedIn.sellerMode);\n                });\n              }\n            });\n          } else if (loggedIn.sellerMode === false) {\n            setLoggedin(function (previousState) {\n              return _objectSpread(_objectSpread({}, previousState), {}, {\n                sellerMode: true\n              });\n            });\n            Firebase.updateData(\"sellerMode\", true, loggedIn.uid).then(function (r) {\n              if (r === true) {\n                saveData(loggedIn).then(function () {\n                  return console.log(\"SAVED SELLER MODE\", loggedIn.sellerMode);\n                });\n              }\n            });\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 30,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      title: \"Buying\",\n      titleStyle: {\n        fontSize: 16,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 10,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Mearurements\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Orders\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 30,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      title: \"Selling\",\n      titleStyle: {\n        fontSize: 16,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 10,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Sales Orders\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Payments\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Services\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 30,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      title: \"Help Center\",\n      titleStyle: {\n        fontSize: 16,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }), React.createElement(Divider, {\n      style: {\n        height: 10,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Help\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"F.A.Q\",\n      chevron: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Logout\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        deleteUserData().then(function () {\n          setLoggedin(undefined);\n          Firebase.signOut().then(function () {\n            return console.log(\"Logged out\");\n          });\n        });\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreen.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","deleteUserData","saveData","Firebase","Toast","firebase","ProfileScreen","navigation","route","loggedIn","setLoggedin","Platform","OS","requestCameraRollPermissionsAsync","status","alert","firestore","collection","doc","uid","get","then","snapshot","console","log","data","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","userAvatar","uri","dpLink","updateData","s","previousState","dp","styles","container","profileStatus","contentContainer","alignItems","marginBottom","name","charAt","toUpperCase","bio","e","textAlign","width","height","r","fontSize","color","textDecorationLine","padding","placeholder","defaultValue","disabled","email","textContentType","city","onFocus","push","center","iconRight","checkedTitle","title","checked","sellerMode","onPress","backgroundColor","fontWeight","borderColor","borderRadius","undefined","signOut","marginTop","marginHorizontal","StyleSheet","create","flex","developmentModeText","lineHeight","paddingTop","welcomeContainer","welcomeImage","resizeMode","marginLeft","getStartedContainer","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport {deleteUserData, saveData} from \"../connection/AsyncStorage\";\nimport {Firebase} from \"../connection/comms\";\nimport Toast from \"../components/ToastMessage\";\nimport firebase from \"firebase\";\n\n\nexport default function ProfileScreen({navigation, route}) {\n    let {loggedIn, setLoggedin} = useContext(UserContext)\n\n\n    useEffect(() => {\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const {status} = await ImagePicker.requestCameraRollPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(loggedIn.uid)\n            .get()\n            .then((snapshot) => {\n                console.log(\"FROM FIREBASE, Saving user in storage.\")\n                saveData(snapshot.data()).then()\n            });\n        \n    }, []);\n\n\n    const pickImage = async (uid) => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 0.5,\n        });\n        console.log(result);\n\n        if (!result.cancelled) {\n            Firebase.userAvatar(result.uri, uid)\n                .then(dpLink => {\n                    console.log(dpLink)\n                    Firebase.updateData(\"dp\", dpLink, uid)\n                        .then(s => {\n                            if (s === true) {\n                                setLoggedin(previousState => ({...previousState, dp: dpLink}))\n                                saveData(loggedIn).then(() => alert(\"Profile Picture Updated.\"))\n                            }\n                        })\n                })\n\n        }\n    };\n\n\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    {loggedIn.profileStatus === \"incomplete\" ?\n                        <Toast message={\"Please Complete your profile.\"} color={\"#ef3caf\"}/> : null}\n\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n\n\n                        {/*Profile image*/}\n                        <View style={{alignItems: \"center\", marginBottom: 20}}>\n                            <Avatar source={{uri: loggedIn.dp}} size={\"xlarge\"} rounded\n                                    title={loggedIn.name.charAt(0).toUpperCase()}\n                                    showEditButton={true} onEditPress={() => pickImage(loggedIn.uid)}/>\n                        </View>\n\n\n                        <View style={{alignItems: \"center\", marginBottom: 20}}>\n                            <TextInput placeholder={\"Write bio here (300 chars max)\"} defaultValue={loggedIn.bio}\n                                       maxLength={300} multiline={true}\n                                       onChangeText={(e) => {\n                                           setLoggedin(previousState => ({...previousState, bio: e}));\n                                       }}\n                                       style={{textAlign: \"center\", width: \"80%\", height: 50}}/>\n                            <Button\n                                onPress={() => {\n                                    Firebase.updateData(\"bio\", loggedIn.bio, loggedIn.uid).then(r => {\n                                        if (r === true) {\n                                            saveData(loggedIn).then(r => alert(\"Updated Profile.\"))\n                                        }\n                                    })\n                                }}\n                                title={\"Update Bio\"}\n                                titleStyle={{fontSize: 12, color: \"#ef3caf\", textDecorationLine: \"underline\"}}\n                                type=\"clear\"\n                                style={{padding: 10,}}\n                            />\n                        </View>\n                        <ListItem\n                            topDivider\n                            title=\"Full Name\"\n                            input={{\n                                placeholder: 'Type Here',\n                                defaultValue: loggedIn.name,\n                                disabled: true\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Email\"\n                            input={{\n                                placeholder: 'Type Here',\n                                defaultValue: loggedIn.email,\n                                textContentType: \"emailAddress\",\n                                disabled: true\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title={\"Location\"}\n                            input={{\n                                placeholder: 'Type Here',\n                                textContentType: \"location\",\n                                defaultValue: loggedIn.city,\n                                onFocus: () => {\n                                    navigation.push(\"Location\")\n                                }\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            bottomDivider\n                            title={\"Seller Mode\"}\n                            checkBox={{\n                                center: true,\n                                iconRight: true,\n                                checkedTitle: \"Disable \",\n                                title: \"Enable \",\n                                checked: loggedIn.sellerMode,\n                                onPress() {\n                                    if (loggedIn.sellerMode){\n                                        setLoggedin(previousState => ({...previousState, sellerMode: false}));\n                                        Firebase.updateData(\"sellerMode\", false, loggedIn.uid).then(r => {\n                                            if (r=== true){\n                                                saveData(loggedIn).then(()=>console.log(\"SAVED SELLER MODE\", loggedIn.sellerMode))\n                                            }\n                                        })\n                                    }else if (loggedIn.sellerMode === false){\n                                        setLoggedin(previousState => ({...previousState, sellerMode: true}));\n                                        Firebase.updateData(\"sellerMode\", true, loggedIn.uid).then(r => {\n                                            if (r=== true){\n                                                saveData(loggedIn).then(()=>console.log(\"SAVED SELLER MODE\", loggedIn.sellerMode))\n                                            }\n                                        })\n                                    }\n                                }\n                            }}\n                        />\n                        <Divider style={{height: 30, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            title={\"Buying\"}\n                            titleStyle={{fontSize: 16, fontWeight: \"bold\"}}\n\n                        />\n                        <Divider style={{height: 10, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            topDivider\n                            title=\"Mearurements\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Orders\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <Divider style={{height: 30, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            title={\"Selling\"}\n                            titleStyle={{fontSize: 16, fontWeight: \"bold\"}}\n\n                        />\n                        <Divider style={{height: 10, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            topDivider\n                            title=\"Sales Orders\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Payments\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Services\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <Divider style={{height: 30, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            title={\"Help Center\"}\n                            titleStyle={{fontSize: 16, fontWeight: \"bold\"}}\n\n                        />\n                        <Divider style={{height: 10, backgroundColor: \"white\"}}/>\n                        <ListItem\n                            topDivider\n                            title=\"Help\"\n                            chevron={\"arrow-right\"}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"F.A.Q\"\n                            chevron={\"arrow-right\"}\n                        />\n\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Logout\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={() => {\n                                deleteUserData().then(() => {\n                                    setLoggedin(undefined)\n                                    Firebase.signOut().then(() => console.log(\"Logged out\"))\n                                })\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    developmentModeText: {\n        marginBottom: 20,\n        color: 'rgba(0,0,0,0.4)',\n        fontSize: 14,\n        lineHeight: 19,\n        textAlign: 'center',\n    },\n    contentContainer: {\n        paddingTop: 30,\n    },\n    welcomeContainer: {\n        alignItems: 'center',\n        marginTop: 10,\n        marginBottom: 20,\n    },\n    welcomeImage: {\n        width: 100,\n        height: 80,\n        resizeMode: 'contain',\n        marginTop: 3,\n        marginLeft: -10,\n    },\n    getStartedContainer: {\n        alignItems: 'center',\n        marginHorizontal: 50,\n    },\n    homeScreenFilename: {\n        marginVertical: 7,\n    },\n    codeHighlightText: {\n        color: 'rgba(96,100,109, 0.8)',\n    },\n    codeHighlightContainer: {\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        borderRadius: 3,\n        paddingHorizontal: 4,\n    },\n    getStartedText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        lineHeight: 24,\n        textAlign: 'center',\n    },\n    tabBarInfoContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        ...Platform.select({\n            ios: {\n                shadowColor: 'black',\n                shadowOffset: {width: 0, height: -3},\n                shadowOpacity: 0.1,\n                shadowRadius: 3,\n            },\n            android: {\n                elevation: 20,\n            },\n        }),\n        alignItems: 'center',\n        backgroundColor: '#fbfbfb',\n        paddingVertical: 20,\n    },\n    tabBarInfoText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        textAlign: 'center',\n    },\n    navigationFilename: {\n        marginTop: 5,\n    },\n    helpContainer: {\n        marginTop: 15,\n        alignItems: 'center',\n    },\n    helpLink: {\n        paddingVertical: 15,\n    },\n    helpLinkText: {\n        fontSize: 14,\n        color: '#2e78b7',\n    }\n});"]},"metadata":{},"sourceType":"module"}