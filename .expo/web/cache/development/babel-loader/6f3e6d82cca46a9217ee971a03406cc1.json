{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, ListItem, Text } from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport { deleteUserData, saveData } from \"../connection/AsyncStorage\";\nimport { Firebase } from \"../connection/comms\";\nimport Toast from \"../components/ToastMessage\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport default function ProfileScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dp = _useState2[0],\n      setdp = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setdp(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var loggedIn = _ref.loggedIn,\n        setLoggedin = _ref.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, loggedIn.profileStatus === \"incomplete\" ? React.createElement(Toast, {\n      message: \"Please Complete your profile.\",\n      color: \"#ef3caf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 64\n      }\n    }) : null, React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, React.createElement(Avatar, {\n      source: \"P\",\n      size: \"xlarge\",\n      rounded: true,\n      title: loggedIn.name.charAt(0).toUpperCase(),\n      showEditButton: true,\n      onEditPress: function onEditPress() {\n        return pickImage;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    })), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Full Name\",\n      input: {\n        placeholder: 'Type Here',\n        defaultValue: loggedIn.name,\n        disabled: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Email\",\n      input: {\n        placeholder: 'Type Here',\n        defaultValue: loggedIn.email,\n        textContentType: \"emailAddress\",\n        disabled: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), React.createElement(ListItem, {\n      topDivider: true,\n      title: \"Location\",\n      input: {\n        placeholder: 'Type Here',\n        defaultValue: loggedIn.city,\n        onChangeText: function onChangeText(text) {\n          setLoggedin(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              city: text\n            });\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: {\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Please write the 3 letter station code. Search for station codes in search tab.\"), React.createElement(Text, {\n      style: {\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"You can also change default station by long-pressing the station in search tab.\"), React.createElement(Button, {\n      onPress: function onPress() {\n        Firebase.updateCity(loggedIn.city, loggedIn.uid).then(function (r) {\n          if (r === true) {\n            saveData(loggedIn);\n          }\n        });\n      },\n      title: \"Update City\",\n      style: {\n        padding: 10,\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      onPress: function onPress() {\n        deleteUserData().then(function () {\n          setLoggedin(undefined);\n          Firebase.signOut().then(function () {\n            return console.log(\"Logged out\");\n          });\n        });\n      },\n      title: \"Sign Out\",\n      style: {\n        padding: 10,\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreen.js"],"names":["React","useEffect","useState","ImagePicker","Avatar","Button","ListItem","Text","UserContext","deleteUserData","saveData","Firebase","Toast","Ionicons","ProfileScreen","dp","setdp","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","loggedIn","setLoggedin","styles","container","profileStatus","contentContainer","alignItems","marginBottom","name","charAt","toUpperCase","placeholder","defaultValue","disabled","email","textContentType","city","onChangeText","text","previousState","paddingHorizontal","updateCity","uid","then","r","padding","marginTop","undefined","signOut","StyleSheet","create","flex","backgroundColor","developmentModeText","color","fontSize","lineHeight","textAlign","paddingTop","welcomeContainer","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","getStartedText","tabBarInfoContainer","position","bottom","left","right","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, ListItem, Text} from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport {deleteUserData, saveData} from \"../connection/AsyncStorage\";\nimport {Firebase} from \"../connection/comms\";\nimport Toast from \"../components/ToastMessage\";\nimport {Ionicons} from \"@expo/vector-icons\";\n\n\nexport default function ProfileScreen() {\n    let[dp, setdp] = useState(null)\n\n    useEffect(() => {\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n    }, []);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n        console.log(result);\n\n        if (!result.cancelled) {\n            setdp(result.uri);\n        }\n    };\n\n\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container}>\n                    {loggedIn.profileStatus === \"incomplete\" ? <Toast message={\"Please Complete your profile.\"} color={\"#ef3caf\"}/>: null}\n\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        <View style={{alignItems: \"center\", marginBottom: 20}}>\n                            <Avatar source={\"P\"} size={\"xlarge\"} rounded title={loggedIn.name.charAt(0).toUpperCase()}\n                                    showEditButton={true} onEditPress={()=>pickImage}/>\n                        </View>\n\n                        <ListItem\n                            topDivider\n                            title=\"Full Name\"\n                            input={{\n                                placeholder: 'Type Here',\n                                defaultValue: loggedIn.name,\n                                disabled: true\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Email\"\n                            input={{\n                                placeholder: 'Type Here',\n                                defaultValue: loggedIn.email,\n                                textContentType: \"emailAddress\",\n                                disabled: true\n                            }}\n                        />\n                        <ListItem\n                            topDivider\n                            title=\"Location\"\n                            input={{\n                                placeholder: 'Type Here',\n                                defaultValue: loggedIn.city,\n                                onChangeText: text => {\n                                    setLoggedin(previousState => ({...previousState, city: text}));\n                                }\n                            }}\n                        />\n                        <Text style={{paddingHorizontal: 20}}>Please write the 3 letter station code. Search for station codes in search tab.</Text>\n                        <Text style={{paddingHorizontal: 20}}>You can also change default station by long-pressing the station in search tab.</Text>\n                        <Button\n                            onPress={() => {\n                                Firebase.updateCity(loggedIn.city, loggedIn.uid).then(r => {\n                                    if (r === true) {\n                                        saveData(loggedIn)\n                                    }\n                                })\n                            }}\n                            title={\"Update City\"}\n                            style={{padding: 10, marginTop: 20}}\n                        />\n                        <Button\n                            onPress={() => {\n                                deleteUserData().then(() => {\n                                    setLoggedin(undefined)\n                                    Firebase.signOut().then(() => console.log(\"Logged out\"))\n                                })\n                            }}\n                            title={\"Sign Out\"}\n                            style={{padding: 10, marginTop: 20}}\n                        />\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    developmentModeText: {\n        marginBottom: 20,\n        color: 'rgba(0,0,0,0.4)',\n        fontSize: 14,\n        lineHeight: 19,\n        textAlign: 'center',\n    },\n    contentContainer: {\n        paddingTop: 30,\n    },\n    welcomeContainer: {\n        alignItems: 'center',\n        marginTop: 10,\n        marginBottom: 20,\n    },\n    welcomeImage: {\n        width: 100,\n        height: 80,\n        resizeMode: 'contain',\n        marginTop: 3,\n        marginLeft: -10,\n    },\n    getStartedContainer: {\n        alignItems: 'center',\n        marginHorizontal: 50,\n    },\n    homeScreenFilename: {\n        marginVertical: 7,\n    },\n    codeHighlightText: {\n        color: 'rgba(96,100,109, 0.8)',\n    },\n    codeHighlightContainer: {\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        borderRadius: 3,\n        paddingHorizontal: 4,\n    },\n    getStartedText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        lineHeight: 24,\n        textAlign: 'center',\n    },\n    tabBarInfoContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        ...Platform.select({\n            ios: {\n                shadowColor: 'black',\n                shadowOffset: {width: 0, height: -3},\n                shadowOpacity: 0.1,\n                shadowRadius: 3,\n            },\n            android: {\n                elevation: 20,\n            },\n        }),\n        alignItems: 'center',\n        backgroundColor: '#fbfbfb',\n        paddingVertical: 20,\n    },\n    tabBarInfoText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        textAlign: 'center',\n    },\n    navigationFilename: {\n        marginTop: 5,\n    },\n    helpContainer: {\n        marginTop: 15,\n        alignItems: 'center',\n    },\n    helpLink: {\n        paddingVertical: 15,\n    },\n    helpLinkText: {\n        fontSize: 14,\n        color: '#2e78b7',\n    },\n});"]},"metadata":{},"sourceType":"module"}