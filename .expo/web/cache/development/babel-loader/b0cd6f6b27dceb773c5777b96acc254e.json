{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\Search\\\\SearchScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport firebase from \"firebase\";\nimport UserContext from \"../../connection/userContext\";\nimport { Firebase } from \"../../connection/comms\";\nimport ServicesList from \"../../components/ServicesList\";\nimport { SearchBar } from \"react-native-elements\";\nexport default function Search(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTxt = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refreshing = _useState8[0],\n      setRefreshing = _useState8[1];\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      details = _useState10[0],\n      setDetails = _useState10[1];\n\n  var loadDataInView = function loadDataInView() {\n    firebase.firestore().collection(\"services\").get().then(function (snapshot) {\n      var dataArray = [];\n      snapshot.docs.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        dataArray.push(data);\n      });\n      setDetails(dataArray);\n      return dataArray;\n    });\n  };\n\n  useEffect(function () {\n    if (Loading === true) {\n      loadDataInView();\n    }\n  });\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(false);\n    setLoading(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    platform: Platform.OS,\n    placeholder: \"Search here...\",\n    onChangeText: function onChangeText(t) {\n      return setSearch(t);\n    },\n    value: searchTxt,\n    onBlur: function onBlur() {\n      var results = [];\n\n      if (searchTxt.length > 2) {\n        details.forEach(function (r) {\n          if (r.title.toLowerCase().search(searchTxt.toLowerCase()) !== -1 || r.details.toLowerCase().search(searchTxt.toLowerCase()) !== -1) {\n            results.push(r);\n          }\n        });\n      }\n\n      setData(results);\n    },\n    onCancel: function onCancel() {\n      return setData(null);\n    },\n    onClear: function onClear() {\n      return setData(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.container,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, data && data.length === 0 ? React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: \"grey\",\n      marginTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 46\n    }\n  }, \"Your search didn't return anything\") : React.createElement(ServicesList, {\n    services: data,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    padding: 20\n  },\n  smallText: {\n    fontSize: 15,\n    fontStyle: \"italic\",\n    fontWeight: \"200\",\n    color: \"grey\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/Search/SearchScreen.js"],"names":["React","useContext","useEffect","useState","firebase","UserContext","Firebase","ServicesList","SearchBar","Search","navigation","route","searchTxt","setSearch","Loading","setLoading","data","setData","refreshing","setRefreshing","loggedIn","details","setDetails","loadDataInView","firestore","collection","get","then","snapshot","dataArray","docs","forEach","doc","id","push","onRefresh","styles","container","Platform","OS","t","results","length","r","title","toLowerCase","search","textAlign","color","marginTop","StyleSheet","create","flex","backgroundColor","header","padding","smallText","fontSize","fontStyle","fontWeight"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {RefreshControl, ScrollView, StyleSheet, Text, View, Platform} from 'react-native'\r\nimport firebase from \"firebase\";\r\n\r\nimport UserContext from \"../../connection/userContext\";\r\nimport {Firebase} from \"../../connection/comms\";\r\nimport ServicesList from \"../../components/ServicesList\";\r\nimport {SearchBar} from \"react-native-elements\";\r\n\r\nexport default function Search({navigation, route}) {\r\n\r\n    const [searchTxt, setSearch] = useState(\"\")\r\n    const [Loading, setLoading] = useState(true)\r\n    const [data, setData] = useState(null)\r\n    const [refreshing, setRefreshing] = useState(false);\r\n    const {loggedIn} = useContext(UserContext)\r\n    const [details, setDetails] = useState(null)\r\n\r\n\r\n    const loadDataInView = () => {\r\n        firebase.firestore()\r\n            .collection(\"services\")\r\n            // .where(\"seller\", \"!=\", loggedIn.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let dataArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    let data = doc.data();\r\n                    data.id = doc.id;\r\n                    dataArray.push(data)\r\n                });\r\n                setDetails(dataArray)\r\n                return dataArray\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Loading === true) {\r\n            loadDataInView()\r\n        }\r\n\r\n    })\r\n\r\n    const onRefresh = () => {\r\n        setRefreshing(false)\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <SearchBar\r\n                platform={Platform.OS}\r\n                placeholder={\"Search here...\"}\r\n                onChangeText={t => setSearch(t)}\r\n                value={searchTxt}\r\n                onBlur={() => {\r\n                    let results = [];\r\n                    if (searchTxt.length > 2){\r\n                        details.forEach(function (r) {\r\n                            if (r.title.toLowerCase().search(searchTxt.toLowerCase()) !== -1 || r.details.toLowerCase().search(searchTxt.toLowerCase()) !== -1) {\r\n                                results.push(r)\r\n                            }\r\n                        })\r\n                    }\r\n                    setData(results)\r\n                }}\r\n                onCancel={()=>setData(null)}\r\n                onClear={()=>setData(null)}\r\n            />\r\n            <ScrollView style={styles.container}\r\n                        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}>\r\n                {data && data.length === 0 ? <Text style={{textAlign: \"center\", color: \"grey\", marginTop: 50}}>Your search didn't return anything</Text> :\r\n                    <ServicesList services={data} navigation={navigation}/>}\r\n\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    header: {\r\n        padding: 20,\r\n    },\r\n    smallText: {\r\n        fontSize: 15,\r\n        fontStyle: \"italic\",\r\n        fontWeight: \"200\",\r\n        color: \"grey\"\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}