{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\Measurements.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { deleteUserData, getData, saveData } from \"../../connection/AsyncStorage\";\nimport { Firebase } from \"../../connection/comms\";\nimport firebase from \"firebase\";\nexport default function Measurements(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      measurementsState = _useState2[0],\n      setMeasurementsState = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn,\n      setLoggedin = _useContext.setLoggedin;\n\n  useEffect(function () {\n    console.log(\"Set local measurements from context.\");\n\n    if (loggedIn.measurements) {\n      setMeasurementsState(loggedIn.measurements);\n    }\n  });\n  var measurementsList = {\n    arms: \"Arms Length\",\n    shoulder: \"Shoulders\",\n    chest: \"Chest\",\n    stomach: \"Stomach\",\n    waist: \"Waist\",\n    armHole: \"Arms Hole\",\n    shirtLength: \"Shirt Length\",\n    collar: \"Collar Size\",\n    pantsLength: \"Pants Length\",\n    pantsWaist: \"Pants Waist\",\n    crotch: \"Crotch\",\n    cuffs: \"Cuffs Size\"\n  };\n  return React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, route.name), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: \"normal\",\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Add your measurements precisely. These will be shared with the tailors you hire. All measurements are recorded in inches.\"), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, Object.keys(measurementsList).forEach(function (key) {\n      console.log(key);\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 36\n        }\n      }, key);\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Update Measurements\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        alert(\"Updated\");\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/Measurements.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","deleteUserData","getData","saveData","Firebase","firebase","Measurements","navigation","route","measurementsState","setMeasurementsState","loggedIn","setLoggedin","console","log","measurements","measurementsList","arms","shoulder","chest","stomach","waist","armHole","shirtLength","collar","pantsLength","pantsWaist","crotch","cuffs","Platform","OS","styles","container","fontSize","fontWeight","paddingHorizontal","marginTop","name","contentContainer","Object","keys","forEach","key","borderColor","borderRadius","color","alert","marginHorizontal","StyleSheet","create","flex","backgroundColor","developmentModeText","marginBottom","lineHeight","textAlign","paddingTop","welcomeContainer","alignItems","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","getStartedText","tabBarInfoContainer","position","bottom","left","right","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {deleteUserData, getData, saveData} from \"../../connection/AsyncStorage\";\nimport {Firebase} from \"../../connection/comms\";\nimport firebase from \"firebase\";\n\n\nexport default function Measurements({navigation, route}) {\n    const [measurementsState, setMeasurementsState] = useState({})\n    const {loggedIn, setLoggedin} = useContext(UserContext)\n\n    useEffect(()=>{\n        console.log(\"Set local measurements from context.\")\n        if (loggedIn.measurements){\n            setMeasurementsState(loggedIn.measurements)\n        }\n    })\n    let measurementsList = {\n        arms: \"Arms Length\",\n        shoulder: \"Shoulders\",\n        chest: \"Chest\",\n        stomach: \"Stomach\",\n        waist: \"Waist\",\n        armHole: \"Arms Hole\",\n        shirtLength: \"Shirt Length\",\n        collar: \"Collar Size\",\n        pantsLength: \"Pants Length\",\n        pantsWaist: \"Pants Waist\",\n        crotch: \"Crotch\",\n        cuffs: \"Cuffs Size\"\n    }\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <Text style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginTop: 10\n                    }}>{route.name}</Text>\n                    <Text style={{fontSize: 14, fontWeight: \"normal\", paddingHorizontal: 20}}>Add your measurements\n                        precisely. These will be shared with the tailors you hire. All measurements are recorded in\n                        inches.</Text>\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        \n                        {Object.keys(measurementsList).forEach(key => {\n                            console.log(key)\n                            return(<Text>{key}</Text>)\n                        }) }\n\n\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Update Measurements\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={() => {\n                                alert(\"Updated\")\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    developmentModeText: {\n        marginBottom: 20,\n        color: 'rgba(0,0,0,0.4)',\n        fontSize: 14,\n        lineHeight: 19,\n        textAlign: 'center',\n    },\n    contentContainer: {\n        paddingTop: 30,\n    },\n    welcomeContainer: {\n        alignItems: 'center',\n        marginTop: 10,\n        marginBottom: 20,\n    },\n    welcomeImage: {\n        width: 100,\n        height: 80,\n        resizeMode: 'contain',\n        marginTop: 3,\n        marginLeft: -10,\n    },\n    getStartedContainer: {\n        alignItems: 'center',\n        marginHorizontal: 50,\n    },\n    homeScreenFilename: {\n        marginVertical: 7,\n    },\n    codeHighlightText: {\n        color: 'rgba(96,100,109, 0.8)',\n    },\n    codeHighlightContainer: {\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        borderRadius: 3,\n        paddingHorizontal: 4,\n    },\n    getStartedText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        lineHeight: 24,\n        textAlign: 'center',\n    },\n    tabBarInfoContainer: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        ...Platform.select({\n            ios: {\n                shadowColor: 'black',\n                shadowOffset: {width: 0, height: -3},\n                shadowOpacity: 0.1,\n                shadowRadius: 3,\n            },\n            android: {\n                elevation: 20,\n            },\n        }),\n        alignItems: 'center',\n        backgroundColor: '#fbfbfb',\n        paddingVertical: 20,\n    },\n    tabBarInfoText: {\n        fontSize: 17,\n        color: 'rgba(96,100,109, 1)',\n        textAlign: 'center',\n    },\n    navigationFilename: {\n        marginTop: 5,\n    },\n    helpContainer: {\n        marginTop: 15,\n        alignItems: 'center',\n    },\n    helpLink: {\n        paddingVertical: 15,\n    },\n    helpLinkText: {\n        fontSize: 14,\n        color: '#2e78b7',\n    }\n});"]},"metadata":{},"sourceType":"module"}