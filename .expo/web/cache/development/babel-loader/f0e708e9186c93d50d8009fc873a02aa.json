{"ast":null,"code":"import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport { saveData } from \"./AsyncStorage\";\nfirebase.initializeApp(firebaseConfig);\nexport var Firebase = {\n  loginWithEmail: function loginWithEmail(email, password) {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(function (res) {\n      return firebase.firestore().collection(\"users\").doc(res.user.uid).get().then(function (snapshot) {\n        console.log(\"FROM FIREBASE, Saving user in storage.\");\n        saveData(snapshot.data()).then();\n        return snapshot.data();\n      });\n    });\n  },\n  updateData: function updateData(city, uid, d) {\n    return firebase.firestore().collection(\"users\").doc(uid).update({\n      d: city\n    }).then(function () {\n      console.log(\"Updating city...\");\n      return true;\n    });\n  },\n  signupWithEmail: function signupWithEmail(email, password) {\n    return firebase.auth().createUserWithEmailAndPassword(email, password);\n  },\n  signOut: function signOut() {\n    return firebase.auth().signOut();\n  },\n  checkUserAuth: function checkUserAuth(user) {\n    return firebase.auth().onAuthStateChanged(user);\n  },\n  passwordReset: function passwordReset(email) {\n    return firebase.auth().sendPasswordResetEmail(email);\n  },\n  createNewUser: function createNewUser(userData) {\n    return firebase.firestore().collection(\"users\").doc(\"\" + userData.uid).set(userData);\n  },\n  getTrainsWithUserCity: function getTrainsWithUserCity(city) {\n    console.log(city);\n    return firebase.firestore().collection(\"trains\").where(\"dStation\", \"==\", city).get().then(function (snapshot) {\n      var dataArray = [];\n      snapshot.docs.forEach(function (doc) {\n        var data = doc.data();\n        data.uid = doc.id;\n        dataArray.push(data);\n      });\n      return dataArray;\n    });\n  }\n};\nexport var Fetch = {\n  getData: function getData(stationCode) {\n    var URL = \"http://transportapi.com/v3/uk/train/station/\" + stationCode + \"/live.json?app_id=d40b0b1a&app_key=0f0404c12a6bdebfb462189386af7263\";\n    return fetch(URL, {\n      method: 'get'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data;\n    }).catch(function (r) {\n      console.log(r);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/connection/comms.js"],"names":["firebase","firebaseConfig","saveData","initializeApp","Firebase","loginWithEmail","email","password","auth","signInWithEmailAndPassword","then","res","firestore","collection","doc","user","uid","get","snapshot","console","log","data","updateData","city","d","update","signupWithEmail","createUserWithEmailAndPassword","signOut","checkUserAuth","onAuthStateChanged","passwordReset","sendPasswordResetEmail","createNewUser","userData","set","getTrainsWithUserCity","where","dataArray","docs","forEach","id","push","Fetch","getData","stationCode","URL","fetch","method","response","json","catch","r"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport {saveData} from \"./AsyncStorage\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const Firebase = {\n    loginWithEmail: (email, password) => {\n        return firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n            return firebase.firestore()\n                .collection(\"users\")\n                .doc(res.user.uid)\n                .get()\n                .then((snapshot) => {\n                    console.log(\"FROM FIREBASE, Saving user in storage.\")\n                    saveData(snapshot.data()).then()\n                    return (snapshot.data())\n                });\n        });\n    },\n    updateData: (city, uid, d) => {\n        return firebase.firestore()\n            .collection(\"users\")\n            .doc(uid)\n            .update({d: city})\n            .then(() => {\n                console.log(\"Updating city...\")\n                return true\n            });\n    },\n    signupWithEmail: (email, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\n    },\n    signOut: () => {\n        return firebase.auth().signOut();\n    },\n    checkUserAuth: user => {\n        return firebase.auth().onAuthStateChanged(user);\n    },\n    passwordReset: email => {\n        return firebase.auth().sendPasswordResetEmail(email);\n    },\n    createNewUser: userData => {\n        return firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(`${userData.uid}`)\n            .set(userData);\n    },\n    getTrainsWithUserCity: (city) => {\n        console.log(city)\n        return firebase\n            .firestore()\n            .collection(\"trains\")\n            .where(\"dStation\", \"==\", city)\n            .get()\n            .then((snapshot) => {\n                let dataArray = [];\n                snapshot.docs.forEach(doc => {\n                    let data = doc.data()\n                    data.uid = doc.id\n                    dataArray.push(data)\n                });\n                return dataArray\n            });\n    },\n};\n\nexport const Fetch = {\n    getData: (stationCode) => {\n        const URL = \"http://transportapi.com/v3/uk/train/station/\"+stationCode+\"/live.json?app_id=d40b0b1a&app_key=0f0404c12a6bdebfb462189386af7263\"\n        return fetch(URL, {\n            method: 'get',\n        }).then(function (response) {\n            return response.json();\n        }).then(function (data) {\n            return data;\n        }).catch(r => {\n            console.log(r)\n        });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}