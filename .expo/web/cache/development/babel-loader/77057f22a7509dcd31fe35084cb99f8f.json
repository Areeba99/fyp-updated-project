{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\auth\\\\ResetPassword.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormInput from \"../../components/FormInput\";\nimport FormButton from \"../../components/FormButton\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { Button } from \"react-native-elements\";\nimport { Firebase } from \"../../connection/comms\";\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().label(\"Email\").email(\"Enter a valid email\").required(\"Please enter a registered email\")\n});\n\nfunction ForgotPassword(_ref) {\n  var navigation = _ref.navigation,\n      firebase = _ref.firebase;\n\n  function goToLogin() {\n    return navigation.navigate(\"Login\");\n  }\n\n  function handlePasswordReset(values, actions) {\n    var email;\n    return _regeneratorRuntime.async(function handlePasswordReset$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = values.email;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Firebase.passwordReset(email));\n\n          case 4:\n            console.log(\"Password reset email sent successfully\");\n            navigation.navigate(\"Login\");\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            actions.setFieldError(\"general\", _context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\")), React.createElement(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: function onSubmit(values, actions) {\n      handlePasswordReset(values, actions);\n    },\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        values = _ref2.values,\n        handleSubmit = _ref2.handleSubmit,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid,\n        touched = _ref2.touched,\n        handleBlur = _ref2.handleBlur,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(React.Fragment, null, React.createElement(FormInput, {\n      name: \"email\",\n      value: values.email,\n      onChangeText: handleChange(\"email\"),\n      placeholder: \"Enter email\",\n      autoCapitalize: \"none\",\n      iconName: \"ios-mail\",\n      iconColor: \"#2C384A\",\n      onBlur: handleBlur(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }), React.createElement(ErrorMessage, {\n      errorValue: touched.email && errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), React.createElement(View, {\n      style: styles.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, React.createElement(FormButton, {\n      buttonType: \"outline\",\n      onPress: handleSubmit,\n      title: \"Send Email\",\n      buttonColor: \"#ef3caf\",\n      disabled: !isValid || isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"Login Instead!\",\n      onPress: goToLogin,\n      titleStyle: {\n        color: \"#039BE5\"\n      },\n      type: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    })), React.createElement(ErrorMessage, {\n      errorValue: errors.general,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }));\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  text: {\n    color: \"#333\",\n    fontSize: 24,\n    marginLeft: 25,\n    marginBottom: 25\n  },\n  buttonContainer: {\n    margin: 25\n  }\n});\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/auth/ResetPassword.js"],"names":["React","Formik","Yup","FormInput","FormButton","ErrorMessage","Button","Firebase","validationSchema","object","shape","email","string","label","required","ForgotPassword","navigation","firebase","goToLogin","navigate","handlePasswordReset","values","actions","passwordReset","console","log","setFieldError","message","styles","container","paddingTop","text","handleChange","handleSubmit","errors","isValid","touched","handleBlur","isSubmitting","buttonContainer","color","general","StyleSheet","create","flex","backgroundColor","fontSize","marginLeft","marginBottom","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, SafeAreaView, View, StyleSheet } from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormInput from \"../../components/FormInput\";\nimport FormButton from \"../../components/FormButton\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { Button } from \"react-native-elements\";\nimport {Firebase} from \"../../connection/comms\";\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string()\n        .label(\"Email\")\n        .email(\"Enter a valid email\")\n        .required(\"Please enter a registered email\")\n});\n\nfunction ForgotPassword({ navigation, firebase }) {\n    function goToLogin() {\n        return navigation.navigate(\"Login\");\n    }\n\n\n    async function handlePasswordReset(values, actions) {\n        const { email } = values;\n\n        try {\n            await Firebase.passwordReset(email);\n            console.log(\"Password reset email sent successfully\");\n            navigation.navigate(\"Login\");\n        } catch (error) {\n            actions.setFieldError(\"general\", error.message);\n        }\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={{paddingTop: 100}}>\n                <Text style={styles.text}>Forgot Password?</Text>\n            </View>\n            <Formik\n                initialValues={{ email: \"\" }}\n                onSubmit={(values, actions) => {\n                    handlePasswordReset(values, actions);\n                }}\n                validationSchema={validationSchema}\n            >\n                {({\n                      handleChange,\n                      values,\n                      handleSubmit,\n                      errors,\n                      isValid,\n                      touched,\n                      handleBlur,\n                      isSubmitting\n                  }) => (\n                    <>\n                        <FormInput\n                            name=\"email\"\n                            value={values.email}\n                            onChangeText={handleChange(\"email\")}\n                            placeholder=\"Enter email\"\n                            autoCapitalize=\"none\"\n                            iconName=\"ios-mail\"\n                            iconColor=\"#2C384A\"\n                            onBlur={handleBlur(\"email\")}\n                        />\n                        <ErrorMessage errorValue={touched.email && errors.email} />\n                        <View style={styles.buttonContainer}>\n                            <FormButton\n                                buttonType=\"outline\"\n                                onPress={handleSubmit}\n                                title=\"Send Email\"\n                                buttonColor=\"#ef3caf\"\n                                disabled={!isValid || isSubmitting}\n                            />\n                            <Button\n                                title=\"Login Instead!\"\n                                onPress={goToLogin}\n                                titleStyle={{\n                                    color: \"#039BE5\"\n                                }}\n                                type=\"clear\"\n                            />\n                        </View>\n                        <ErrorMessage errorValue={errors.general} />\n                    </>\n                )}\n            </Formik>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n    },\n    text: {\n        color: \"#333\",\n        fontSize: 24,\n        marginLeft: 25,\n        marginBottom: 25\n    },\n    buttonContainer: {\n        margin: 25\n    }\n});\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}