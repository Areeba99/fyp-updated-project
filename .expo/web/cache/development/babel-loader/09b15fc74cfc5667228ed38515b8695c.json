{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var saveData = function saveData(data) {\n  return _regeneratorRuntime.async(function saveData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!data) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(data)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var getData = function getData() {\n  var value;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userData'));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!(value !== null)) {\n            _context2.next = 7;\n            break;\n          }\n\n          console.log(\"AsyncStorage -> \", value);\n          return _context2.abrupt(\"return\", JSON.parse(value));\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var deleteUserData = function deleteUserData() {\n  return _regeneratorRuntime.async(function deleteUserData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"userData\"));\n\n        case 3:\n          return _context3.abrupt(\"return\", true);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/connection/AsyncStorage.js"],"names":["saveData","data","AsyncStorage","setItem","JSON","stringify","console","error","getData","getItem","value","log","parse","deleteUserData","removeItem"],"mappings":";;AAEA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,eAEZA,IAFY;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGNC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAjC,CAHM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMhBK,UAAAA,OAAO,CAACC,KAAR;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAUP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEKN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAFL;;AAAA;AAETC,UAAAA,KAFS;;AAAA,gBAGXA,KAAK,KAAK,IAHC;AAAA;AAAA;AAAA;;AAIXJ,UAAAA,OAAO,CAACK,GAAR,CAAY,kBAAZ,EAAgCD,KAAhC;AAJW,4CAKJN,IAAI,CAACQ,KAAL,CAAWF,KAAX,CALI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQfJ,UAAAA,OAAO,CAACC,KAAR;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAYP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEhBX,YAAY,CAACY,UAAb,CAAwB,UAAxB,CAFgB;;AAAA;AAAA,4CAGf,IAHe;;AAAA;AAAA;AAAA;AAAA,4CAKf,KALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import {AsyncStorage} from \"react-native\";\n\nexport const saveData = async (data) => {\n    try {\n        if (data) {\n            await AsyncStorage.setItem('userData', JSON.stringify(data));\n        }\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport const getData = async () => {\n    try {\n        const value = await AsyncStorage.getItem('userData');\n        if (value !== null) {\n            console.log(\"AsyncStorage -> \", value);\n            return JSON.parse(value)\n        }\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport const deleteUserData = async () => {\n    try {\n        await AsyncStorage.removeItem(\"userData\");\n        return true;\n    } catch (exception) {\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}