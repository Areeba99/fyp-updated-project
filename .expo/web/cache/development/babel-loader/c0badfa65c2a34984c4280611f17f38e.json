{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\HomeScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem } from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport { Fetch, Firebase } from \"../connection/comms\";\nimport TrainsList from \"../components/TrainsDetailsList\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      Loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trains = _useState4[0],\n      setTrains = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn,\n      setLoggedin = _useContext.setLoggedin;\n\n  var loadDataInView = function loadDataInView() {\n    Fetch.getData(loggedIn.city).then(function (res) {\n      if (res.error) {\n        alert(res.error);\n        setLoading(false);\n        setRefreshing(false);\n      } else {\n        setTrains(res.departures.all);\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (Loading === true) {\n      loadDataInView();\n    }\n  });\n\n  var onRefresh = function onRefresh() {\n    loadDataInView();\n    setRefreshing(true);\n    setLoading(true);\n  };\n\n  return React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.smallText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Showing All Trains For Your Location\"), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDDFA \", loggedIn.city)), React.createElement(ScrollView, {\n      style: styles.container,\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 68\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, React.createElement(TrainsList, {\n      trains: trains,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        paddingVertical: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"No more trains leaving today üöè\")));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    padding: 20\n  },\n  smallText: {\n    fontSize: 15,\n    fontStyle: \"italic\",\n    fontWeight: \"200\",\n    color: \"grey\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/HomeScreen.js"],"names":["React","useContext","useEffect","useState","ListItem","UserContext","Fetch","Firebase","TrainsList","HomeScreen","navigation","Loading","setLoading","undefined","trains","setTrains","refreshing","setRefreshing","loggedIn","setLoggedin","loadDataInView","getData","city","then","res","error","alert","departures","all","onRefresh","styles","container","header","smallText","title","textAlign","paddingVertical","StyleSheet","create","flex","backgroundColor","padding","fontSize","fontStyle","fontWeight","color"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Alert, RefreshControl, ScrollView, StyleSheet, Text, View} from 'react-native'\nimport {ListItem} from \"react-native-elements\";\nimport UserContext from \"../connection/userContext\";\nimport {Fetch, Firebase} from \"../connection/comms\";\nimport TrainsList from \"../components/TrainsDetailsList\";\n\nexport default function HomeScreen({navigation}) {\n  const [Loading, setLoading] = useState(true)\n  const [trains, setTrains] = useState(undefined)\n  const [refreshing, setRefreshing] = useState(false);\n  const {loggedIn, setLoggedin} = useContext(UserContext)\n\n\n  const loadDataInView = () => {\n    Fetch.getData(loggedIn.city).then(res => {\n      if(res.error){\n        alert(res.error)\n        setLoading(false)\n        setRefreshing(false)\n      }else{\n        setTrains(res.departures.all)\n        setLoading(false)\n        setRefreshing(false)\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (Loading === true) {\n      loadDataInView()\n    }\n  })\n\n  const onRefresh = () => {\n    loadDataInView()\n    setRefreshing(true)\n    setLoading(true)\n\n  }\n\n\n  return (\n      <UserContext.Consumer>\n        {({loggedIn, setLoggedin}) => (\n            <View style={styles.container}>\n              <View style={styles.header}>\n                <Text style={styles.smallText}>\n                  Showing All Trains For Your Location\n                </Text>\n\n                <Text style={styles.title}>\n                  üó∫ {loggedIn.city}\n                </Text>\n              </View>\n              <ScrollView style={styles.container} refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}>\n                <TrainsList trains={trains}/>\n                <Text style={{textAlign: \"center\", paddingVertical: 20}}>{\"No more trains leaving today üöè\"}</Text>\n              </ScrollView>\n            </View>\n        )}\n      </UserContext.Consumer>\n\n\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    padding: 20,\n  },\n  smallText: {\n    fontSize: 15,\n    fontStyle: \"italic\",\n    fontWeight: \"200\",\n    color: \"grey\"\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}