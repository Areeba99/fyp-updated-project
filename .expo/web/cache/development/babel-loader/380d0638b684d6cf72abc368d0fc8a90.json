{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Desktop\\\\fyp\\\\EXPO\\\\screens\\\\ProfileScreens\\\\Measurements.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Avatar, Button, Input, ListItem, Text, Divider } from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport { deleteUserData, getData, saveData } from \"../../connection/AsyncStorage\";\nimport { Firebase } from \"../../connection/comms\";\nimport firebase from \"firebase\";\nexport default function Measurements(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      measurementsState = _useState2[0],\n      setMeasurementsState = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      loggedIn = _useContext.loggedIn;\n\n  useEffect(function () {\n    console.log(\"Set local measurements from context.\");\n\n    if (loggedIn.measurements) {\n      setMeasurementsState(loggedIn.measurements);\n    }\n  }, []);\n  console.log(measurementsState);\n  var measurementsList = {\n    arms: \"Arms Length\",\n    shoulder: \"Shoulders\",\n    chest: \"Chest\",\n    stomach: \"Stomach\",\n    waist: \"Waist\",\n    armHole: \"Arms Hole\",\n    shirtLength: \"Shirt Length\",\n    collar: \"Collar Size\",\n    pantsLength: \"Pants Length\",\n    pantsWaist: \"Pants Waist\",\n    crotch: \"Crotch\",\n    cuffs: \"Cuffs Size\"\n  };\n  return React.createElement(UserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var loggedIn = _ref2.loggedIn,\n        setLoggedin = _ref2.setLoggedin;\n    return React.createElement(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"padding\",\n      style: styles.container,\n      keyboardVerticalOffset: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: \"bold\",\n        paddingHorizontal: 20,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, route.name), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: \"normal\",\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Add your measurements precisely. These will be shared with the tailors you hire. All measurements are recorded in inches.\"), React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, Object.keys(measurementsList).map(function (key) {\n      return React.createElement(ListItem, {\n        key: key,\n        topDivider: true,\n        title: measurementsList[key],\n        input: {\n          dataDetectorTypes: \"phoneNumber\",\n          placeholder: '00.0',\n          defaultValue: measurementsState[key],\n          value: measurementsState[key],\n          onChangeText: function onChangeText(text) {\n            setMeasurementsState(function (previousState) {\n              return _objectSpread(_objectSpread({}, previousState), {}, _defineProperty({}, key, text.replace(/[^0-9\\.]/g, '')));\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      });\n    }), React.createElement(Button, {\n      type: \"outline\",\n      title: \"Update Measurements\",\n      buttonStyle: {\n        borderColor: \"#ef3caf\",\n        borderRadius: 20\n      },\n      titleStyle: {\n        color: \"#ef3caf\"\n      },\n      onPress: function onPress() {\n        if (Object.keys(measurementsState).length < Object.keys(measurementsList).length) {\n          alert(\"Please fill in all information.\");\n        } else {\n          setLoggedin(function (previousState) {\n            return _objectSpread(_objectSpread({}, previousState), {}, {\n              measurements: measurementsState\n            });\n          });\n          Firebase.updateData(\"measurements\", measurementsState, loggedIn.uid).then(function (r) {\n            alert(\"Measurements Updated Successfully.\");\n          });\n        }\n      },\n      style: {\n        marginTop: 20,\n        marginHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  contentContainer: {\n    paddingTop: 30,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Ali/Desktop/fyp/EXPO/screens/ProfileScreens/Measurements.js"],"names":["React","useContext","useEffect","useState","ImagePicker","Avatar","Button","Input","ListItem","Text","Divider","UserContext","deleteUserData","getData","saveData","Firebase","firebase","Measurements","navigation","route","measurementsState","setMeasurementsState","loggedIn","console","log","measurements","measurementsList","arms","shoulder","chest","stomach","waist","armHole","shirtLength","collar","pantsLength","pantsWaist","crotch","cuffs","setLoggedin","Platform","OS","styles","container","fontSize","fontWeight","paddingHorizontal","marginTop","name","contentContainer","Object","keys","map","key","dataDetectorTypes","placeholder","defaultValue","value","onChangeText","text","previousState","replace","borderColor","borderRadius","color","length","alert","updateData","uid","then","r","marginHorizontal","StyleSheet","create","flex","backgroundColor","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {KeyboardAvoidingView, ScrollView, StyleSheet, View, Platform, TextInput,} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport {Avatar, Button, Input, ListItem, Text, Divider} from \"react-native-elements\";\nimport UserContext from \"../../connection/userContext\";\nimport {deleteUserData, getData, saveData} from \"../../connection/AsyncStorage\";\nimport {Firebase} from \"../../connection/comms\";\nimport firebase from \"firebase\";\n\n\nexport default function Measurements({navigation, route}) {\n    const [measurementsState, setMeasurementsState] = useState({})\n    const {loggedIn} = useContext(UserContext)\n\n    useEffect(() => {\n        console.log(\"Set local measurements from context.\")\n\n        if (loggedIn.measurements) {\n            setMeasurementsState(loggedIn.measurements)\n        }\n    }, [])\n\n    console.log(measurementsState)\n    let measurementsList = {\n        arms: \"Arms Length\",\n        shoulder: \"Shoulders\",\n        chest: \"Chest\",\n        stomach: \"Stomach\",\n        waist: \"Waist\",\n        armHole: \"Arms Hole\",\n        shirtLength: \"Shirt Length\",\n        collar: \"Collar Size\",\n        pantsLength: \"Pants Length\",\n        pantsWaist: \"Pants Waist\",\n        crotch: \"Crotch\",\n        cuffs: \"Cuffs Size\"\n    }\n    return (\n        <UserContext.Consumer>\n            {({loggedIn, setLoggedin}) => (\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"padding\"}\n                                      style={styles.container} keyboardVerticalOffset={100}>\n                    <Text style={{\n                        fontSize: 25,\n                        fontWeight: \"bold\",\n                        paddingHorizontal: 20,\n                        marginTop: 10\n                    }}>{route.name}</Text>\n                    <Text style={{fontSize: 14, fontWeight: \"normal\", paddingHorizontal: 20}}>Add your measurements\n                        precisely. These will be shared with the tailors you hire. All measurements are recorded in\n                        inches.</Text>\n                    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                        {Object.keys(measurementsList).map(key => {\n                            return (<ListItem\n                                key={key}\n                                topDivider\n                                title={measurementsList[key]}\n                                input={{\n                                    dataDetectorTypes: \"phoneNumber\",\n                                    placeholder: '00.0',\n                                    defaultValue: measurementsState[key],\n                                    value: measurementsState[key],\n                                    onChangeText: text => {\n                                        setMeasurementsState(previousState => ({\n                                            ...previousState,\n                                            [key]: text.replace(/[^0-9\\.]/g, '')\n                                        }));\n                                    }\n                                }}\n                            />)\n                        })}\n\n\n                        <Button\n                            type={\"outline\"}\n                            title={\"Update Measurements\"}\n                            buttonStyle={{borderColor: \"#ef3caf\", borderRadius: 20}}\n                            titleStyle={{color: \"#ef3caf\"}}\n                            onPress={() => {\n                                if (Object.keys(measurementsState).length < Object.keys(measurementsList).length) {\n                                    alert(\"Please fill in all information.\")\n                                } else {\n                                    setLoggedin(previousState => ({...previousState, measurements: measurementsState}));\n                                    Firebase.updateData(\"measurements\", measurementsState, loggedIn.uid).then(r => {\n                                        alert(\"Measurements Updated Successfully.\")\n                                    })\n                                }\n\n                            }}\n                            style={{marginTop: 20, marginHorizontal: 20}}\n                        />\n\n\n                    </ScrollView>\n                </KeyboardAvoidingView>\n\n            )}\n        </UserContext.Consumer>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n\n    contentContainer: {\n        paddingTop: 30,\n        paddingBottom: 20\n    },\n\n});"]},"metadata":{},"sourceType":"module"}